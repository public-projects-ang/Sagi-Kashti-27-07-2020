var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.469,1,0.946]],["body/components/AppComponent.html",[0,0.764,1,1.639,2,1.746,3,0.323,4,0.28,5,2.125,6,1.431,7,1.431,8,1.431,9,0.28,10,2.929,11,1.431,12,2.58,13,2.221,14,2.707,15,1.895,16,5.201,17,1.895,18,4.638,19,0.514,20,0.031,21,0.811,22,0.323,23,0.624,24,4.638,25,4.638,26,2.06,27,2.246,28,4.033,29,3.379,30,3.502,31,3.879,32,3.006,33,3.879,34,4.638,35,2.459,36,2.707,37,2.551,38,2.551,39,2.551,40,2.269,41,2.929,42,3.502,43,1.216,44,1.895,45,1.746,46,1.431,47,2.262,48,1.431,49,1.167,50,1.431,51,1.036,52,1.895,53,1.036,54,0.745,55,0.956,56,1.431,57,1.036,58,1.431,59,0.956,60,1.431,61,1.036,62,1.318,63,1.431,64,1.036,65,1.431,66,1.036,67,1.123,68,0.683,69,1.431,70,1.431,71,0.017,72,0.022,73,0.017]],["title/modules/AppModule.html",[74,2.071,75,2.071]],["body/modules/AppModule.html",[1,1.787,3,0.239,4,0.207,9,0.207,13,0.901,19,0.956,20,0.032,21,0.601,22,0.239,23,0.462,43,0.901,51,1.594,53,1.594,54,0.552,55,1.471,57,1.594,59,1.471,61,1.594,62,0.976,64,1.594,66,1.594,67,0.832,71,0.012,72,0.018,73,0.012,74,1.681,75,4.174,76,1.514,77,1.681,78,3.707,79,3.707,80,3.149,81,1.889,82,2.169,83,2.169,84,2.169,85,2.169,86,3.144,87,3.149,88,2.169,89,1.889,90,2.593,91,3.149,92,3.765,93,3.149,94,1.681,95,3.149,96,3.765,97,1.889,98,3.765,99,2.593,100,2.593,101,2.593,102,2.169,103,2.169,104,1.889,105,2.593,106,3.765,107,2.593,108,3.765,109,2.593,110,3.765,111,2.593,112,3.765,113,2.593,114,3.765,115,2.593,116,3.765,117,2.593,118,3.765,119,2.593,120,2.593,121,3.765,122,2.169,123,2.593,124,1.672,125,2.593,126,2.169,127,1.889,128,2.593,129,2.593,130,1.889,131,2.743,132,2.593,133,1.681,134,2.593,135,1.889,136,2.593,137,2.593,138,2.593,139,3.765,140,2.593,141,1.889,142,2.593,143,2.743,144,1.681,145,2.593,146,1.514,147,2.593,148,2.593,149,2.593,150,2.593,151,2.593,152,2.593]],["title/classes/AppPage.html",[23,0.569,153,2.328]],["body/classes/AppPage.html",[3,0.406,4,0.352,9,0.352,14,2.572,19,0.647,20,0.031,22,0.406,23,0.785,45,1.659,71,0.021,72,0.025,73,0.021,94,2.855,153,3.911,154,4.407,155,3.685,156,0.406,157,1.721,158,6.025,159,6.025,160,1.589,161,4.407,162,1.721,163,6.282,164,4.407,165,3.685,166,2.384,167,4.407,168,4.407,169,2.336,170,4.407]],["title/modules/AppRoutingModule.html",[74,2.071,86,1.865]],["body/modules/AppRoutingModule.html",[0,0.839,3,0.394,4,0.341,9,0.341,19,0.876,20,0.032,21,0.99,22,0.394,23,0.761,55,1.439,59,1.439,71,0.02,72,0.025,73,0.02,76,2.495,81,3.114,86,3.075,91,3.575,95,4.406,102,3.575,103,3.575,171,4.275,172,4.275,173,3.701,174,5.269,175,2.77,176,2.266,177,5.712,178,3.838,179,2.266,180,4.275,181,4.275]],["title/components/CardComponent.html",[0,0.469,51,0.946]],["body/components/CardComponent.html",[0,0.707,1,0.893,2,1.578,3,0.278,4,0.241,5,1.233,6,1.233,7,1.233,8,1.233,9,0.241,11,1.233,12,2.514,13,2.137,15,1.713,17,1.713,19,0.707,20,0.032,21,0.699,22,0.278,23,0.537,26,1.34,27,1.461,43,1.048,44,1.713,45,1.578,46,1.233,47,2.127,48,1.233,49,1.055,50,1.233,51,1.541,52,1.713,53,0.893,54,0.642,55,0.824,56,1.233,57,0.893,58,1.233,59,0.824,60,1.233,61,0.893,62,1.136,63,1.233,64,0.893,65,1.233,66,0.893,67,0.967,68,0.588,69,1.233,70,1.233,71,0.014,72,0.02,73,0.014,156,0.278,157,1.344,160,1.541,162,0.967,169,1.6,182,2.523,183,1.862,184,2.14,185,4.029,186,4.029,187,3.506,188,0.818,189,3.51,190,2.312,191,3.506,192,1.545,193,4.192,194,0.555,195,3.017,196,1.862,197,4.029,198,3.017,199,1.862,200,3.017,201,1.136,202,1.34,203,5.206,204,4.354,205,3.017,206,2.523,207,4.192,208,4.192,209,2.198,210,3.054,211,5.206,212,3.054,213,1.955,214,1.761,215,1.761,216,2.198,217,3.017,218,2.523]],["title/interfaces/DailyForecast.html",[189,1.865,219,0.569]],["body/interfaces/DailyForecast.html",[3,0.363,4,0.315,9,0.315,20,0.031,22,0.363,71,0.019,72,0.024,73,0.019,156,0.363,188,0.977,189,2.923,194,0.851,210,4.219,212,4.219,219,0.702,220,1.484,221,3.297,222,3.297,223,4.844,224,4.844,225,4.219,226,2.337,227,3.959,228,4.11,229,3.297,230,2.426,231,3.245,232,3.649,233,3.297,234,3.245,235,4.189]],["title/interfaces/Favorite.html",[54,0.68,219,0.569]],["body/interfaces/Favorite.html",[3,0.424,4,0.367,9,0.367,19,0.809,20,0.03,22,0.424,54,1.172,68,1.269,71,0.022,72,0.026,73,0.022,156,0.424,188,1.074,194,0.729,219,0.819,220,1.732,236,3.847,237,1.927]],["title/components/FavoriteCardComponent.html",[0,0.469,53,0.946]],["body/components/FavoriteCardComponent.html",[0,0.684,1,0.838,2,1.51,3,0.261,4,0.226,5,1.157,6,1.157,7,1.157,8,1.157,9,0.226,11,1.157,12,2.484,13,2.111,15,1.638,17,1.638,19,0.785,20,0.032,21,0.656,22,0.261,23,0.505,26,1.258,35,1.501,40,1.835,43,0.984,44,1.638,45,1.51,46,1.157,47,2.069,48,1.157,49,1.274,50,1.157,51,0.838,52,1.638,53,1.498,54,1.334,55,0.773,56,1.157,57,0.838,58,1.157,59,0.773,60,1.157,61,0.838,62,1.066,63,1.157,64,0.838,65,1.157,66,0.838,67,0.908,68,0.552,69,1.157,70,1.157,71,0.013,72,0.019,73,0.013,124,1.258,141,3.893,156,0.261,157,1.286,160,1.498,162,1.286,175,1.835,183,1.781,184,2.068,185,3.894,186,3.894,187,3.354,190,2.249,191,3.354,192,0.908,194,0.53,196,2.068,199,1.781,204,3.354,206,2.369,209,2.063,218,2.369,238,4.469,239,2.369,240,4.01,241,2.832,242,5.549,243,3.33,244,4.01,245,1.51,246,1.51,247,4.01,248,2.832,249,2.832,250,2.832,251,2.063,252,1.835,253,2.063,254,1.372,255,1.835,256,2.832,257,2.832,258,2.832,259,2.832,260,2.832,261,1.501,262,4.01,263,4.01,264,4.01,265,4.01,266,2.832,267,2.369,268,2.832,269,2.063,270,2.832]],["title/components/FavoritesComponent.html",[0,0.469,55,0.873]],["body/components/FavoritesComponent.html",[0,0.668,1,0.803,2,1.465,3,0.25,4,0.217,5,1.109,6,1.109,7,1.109,8,1.109,9,0.217,11,1.109,12,2.463,13,2.094,15,1.59,17,1.59,19,0.772,20,0.031,21,0.629,22,0.25,23,0.484,26,1.206,27,1.315,32,3.219,35,1.439,36,2.899,43,0.943,44,1.59,45,1.465,46,1.109,47,2.029,48,1.109,49,1.145,50,1.109,51,0.803,52,1.59,53,0.803,54,1.249,55,1.356,56,1.109,57,0.803,58,1.109,59,0.741,60,1.109,61,0.803,62,1.022,63,1.109,64,0.803,65,1.109,66,0.803,67,0.87,68,0.887,69,1.109,70,1.109,71,0.013,72,0.018,73,0.013,124,1.206,156,0.25,157,1.247,160,1.556,162,1.247,169,1.439,179,3.056,183,1.728,184,2.02,188,0.759,190,2.206,192,0.87,194,0.602,196,2.02,197,2.27,202,1.206,213,2.521,214,1.584,215,1.584,216,1.978,243,3.194,245,1.022,246,1.022,251,1.978,254,1.315,269,2.835,271,2.27,272,2.947,273,4.548,274,3.891,275,3.545,276,3.219,277,1.978,278,3.891,279,2.715,280,2.715,281,2.715,282,1.759,283,1.978,284,2.27,285,2.27,286,1.978,287,1.978,288,2.27,289,2.27,290,1.978,291,4.967,292,2.27,293,2.27,294,2.715,295,2.715,296,2.27,297,3.803,298,3.254,299,4.548,300,2.654,301,3.803,302,3.803,303,4.548,304,2.27,305,2.27,306,2.521,307,2.27,308,1.978,309,2.27]],["title/injectables/FavoritesService.html",[310,1.306,311,2.071]],["body/injectables/FavoritesService.html",[3,0.382,4,0.331,9,0.331,14,2.416,19,0.758,20,0.032,21,0.959,22,0.382,23,0.737,49,1.042,54,1.35,71,0.02,72,0.025,73,0.02,156,0.382,157,1.656,160,1.529,162,1.327,166,2.294,176,2.194,192,1.805,194,0.548,245,1.558,246,1.558,310,2.11,311,3.347,312,2.416,313,3.462,314,5.165,315,4.139,316,5.165,317,5.63,318,4.139,319,3.462,320,3.462,321,3.016,322,5.165,323,4.139,324,3.016,325,4.139,326,2.682]],["title/interfaces/Forecast.html",[201,1.203,219,0.569]],["body/interfaces/Forecast.html",[3,0.411,4,0.356,9,0.356,19,0.654,20,0.031,22,0.411,71,0.021,72,0.026,73,0.021,156,0.411,188,1.054,189,3.53,194,0.8,201,2.19,219,0.794,220,1.678,226,2.19,227,3.502,228,2.888,327,3.727,328,5.058,329,5.058,330,4.457,331,3.727,332,3.727,333,2.888,334,3.727]],["title/components/ForecastComponent.html",[0,0.469,57,0.946]],["body/components/ForecastComponent.html",[0,0.708,1,0.895,2,1.58,3,0.279,4,0.241,5,1.235,6,1.235,7,1.235,8,1.235,9,0.241,11,1.235,12,2.515,13,2.138,15,1.715,17,1.715,19,0.765,20,0.032,21,0.7,22,0.279,23,0.539,26,1.343,27,1.464,43,1.05,44,1.715,45,1.58,46,1.235,47,2.129,48,1.235,49,1.214,50,1.235,51,0.895,52,1.715,53,0.895,54,0.643,55,0.825,56,1.235,57,1.542,58,1.235,59,0.825,60,1.235,61,0.895,62,1.138,63,1.235,64,0.895,65,1.235,66,0.895,67,0.969,68,0.59,69,1.235,70,1.235,71,0.014,72,0.02,73,0.014,124,1.343,156,0.279,157,1.346,160,1.62,162,1.346,169,1.603,183,1.865,184,2.142,188,0.819,190,2.314,192,0.969,194,0.638,196,2.142,201,1.816,202,1.343,213,2.72,214,1.765,215,1.765,216,2.202,237,0.895,243,3.307,245,1.138,246,1.138,254,1.464,269,3.058,272,3.125,275,3.671,276,3.376,277,2.202,282,1.959,286,2.202,287,2.202,290,2.202,335,2.528,336,4.823,337,4.198,338,3.19,339,4.198,340,3.023,341,3.023,342,3.023,343,2.528,344,1.765,345,2.528,346,2.528]],["title/components/HomeComponent.html",[0,0.469,59,0.873]],["body/components/HomeComponent.html",[0,0.739,1,0.971,2,1.672,3,0.303,4,0.262,5,1.815,6,1.341,7,1.341,8,1.341,9,0.262,11,1.341,12,2.552,13,2.169,15,1.815,17,1.815,19,0.482,20,0.031,21,0.76,22,0.303,23,0.585,26,1.458,27,1.59,28,3.236,29,2.391,31,2.745,32,3.495,35,1.74,36,3.148,43,1.14,44,1.815,45,1.672,46,1.341,47,2.204,48,1.341,49,1.118,50,1.341,51,0.971,52,1.815,53,0.971,54,0.699,55,0.896,56,1.341,57,0.971,58,1.341,59,1.473,60,1.341,61,0.971,62,1.236,63,1.341,64,0.971,65,1.341,66,0.971,67,1.052,68,0.64,69,1.341,70,1.341,71,0.016,72,0.021,73,0.016,156,0.303,157,1.424,160,1.314,162,1.052,178,3.667,183,1.973,184,2.236,190,2.396,192,1.614,196,1.973,267,2.745,292,4.511,296,2.745,297,4.21,298,3.714,300,2.938,301,4.21,302,4.21,304,2.745,305,2.745,306,2.127,347,2.745,348,5.034,349,4.441,350,3.282,351,3.282,352,5.034,353,3.282]],["title/interfaces/IdxData.html",[219,0.569,354,2.071]],["body/interfaces/IdxData.html",[3,0.43,4,0.373,9,0.373,20,0.03,22,0.43,71,0.022,72,0.026,73,0.022,156,0.43,188,1.084,194,0.735,219,0.832,220,1.758,226,2.397,354,3.602,355,3.905,356,3.905,357,5.138,358,4.475]],["title/interfaces/Input.html",[199,1.419,219,0.569]],["body/interfaces/Input.html",[3,0.444,4,0.384,9,0.384,20,0.03,22,0.444,71,0.023,72,0.027,73,0.023,156,0.444,188,1.103,194,0.637,199,2.847,219,0.857,220,1.812,226,2.263,359,4.024]],["title/interfaces/Location.html",[219,0.569,237,0.946]],["body/interfaces/Location.html",[3,0.373,4,0.323,9,0.323,19,0.594,20,0.031,22,0.373,71,0.019,72,0.024,73,0.019,156,0.373,188,0.992,194,0.854,219,0.72,220,1.522,226,2.399,228,3.985,237,1.506,354,4.092,358,4.259,360,3.382,361,4.889,362,4.889,363,3.099,364,4.889,365,4.259,366,4.043,367,4.043]],["title/interfaces/LocationState.html",[146,1.865,219,0.569]],["body/interfaces/LocationState.html",[3,0.27,4,0.234,9,0.234,19,0.824,20,0.032,22,0.437,54,1.094,67,1.799,68,0.572,71,0.014,72,0.02,73,0.014,124,1.303,146,3.001,156,0.27,166,2.493,176,2.726,179,3.055,188,0.801,194,0.68,201,1.547,219,0.522,220,1.104,226,1.786,237,1.602,320,2.453,324,2.136,338,2.726,344,3.679,368,1.9,369,3.81,370,3.636,371,4.3,372,3.437,373,2.933,374,2.933,375,2.136,376,2.453,377,2.933,378,2.994,379,4.3,380,2.994,381,2.663,382,2.136,383,2.453,384,4.819,385,2.453,386,2.453,387,2.453,388,2.453,389,3.968,390,2.453,391,2.453,392,2.453,393,2.453,394,2.453,395,2.453,396,4.3,397,2.453,398,2.453,399,2.453,400,2.453,401,2.453,402,2.453,403,2.453,404,2.453,405,2.933,406,2.933]],["title/injectables/LocationsEffects.html",[133,2.071,310,1.306]],["body/injectables/LocationsEffects.html",[3,0.182,4,0.157,9,0.157,19,0.808,20,0.032,21,0.457,22,0.182,23,0.351,49,0.496,68,0.947,71,0.009,72,0.015,73,0.022,130,1.436,133,1.985,143,3.692,144,1.277,156,0.182,160,1.254,166,2.327,188,0.597,192,0.982,194,0.67,199,2.251,201,1.908,202,0.876,230,1.819,237,1.5,245,0.742,246,0.742,255,2.973,261,2.778,283,1.436,284,1.649,285,1.649,310,1.251,312,1.151,363,2.778,369,2.745,370,1.985,375,1.436,381,1.985,407,1.649,408,3.757,409,3.757,410,3.757,411,1.971,412,5.381,413,3.757,414,3.284,415,3.284,416,1.971,417,2.193,418,5.068,419,4.236,420,4.236,421,4.758,422,4.061,423,5.068,424,3.063,425,4.856,426,3.063,427,3.543,428,4.061,429,4.061,430,5.24,431,4.382,432,4.382,433,3.817,434,5.24,435,4.382,436,5.944,437,4.382,438,4.382,439,4.382,440,4.382,441,5.381,442,1.971,443,3.063,444,3.063,445,1.971,446,3.063,447,3.063,448,3.817,449,3.063,450,3.063,451,1.971,452,1.971,453,1.971,454,1.971,455,1.971,456,1.971,457,1.971,458,1.649]],["title/components/MainHeaderComponent.html",[0,0.469,61,0.946]],["body/components/MainHeaderComponent.html",[0,0.668,1,0.803,2,1.465,3,0.25,4,0.217,5,1.109,6,1.109,7,1.109,8,1.109,9,0.217,11,1.109,12,2.463,13,2.094,15,1.59,17,1.59,19,0.571,20,0.031,21,0.629,22,0.25,23,0.484,26,1.728,27,1.884,32,2.947,33,3.803,35,2.063,36,2.899,37,1.978,38,1.978,39,1.978,40,2.947,41,2.27,43,0.943,44,1.59,45,1.465,46,1.109,47,2.029,48,1.109,49,0.979,50,1.109,51,0.803,52,1.59,53,0.803,54,0.578,55,0.741,56,1.109,57,0.803,58,1.109,59,0.741,60,1.109,61,1.47,62,2.242,63,1.109,64,0.803,65,1.109,66,0.803,67,0.87,68,0.887,69,1.109,70,1.109,71,0.013,72,0.018,73,0.013,104,3.83,144,1.759,156,0.25,157,1.247,160,1.47,162,0.87,169,1.439,178,3.313,179,2.063,183,1.728,184,2.02,188,0.759,190,2.206,192,1.458,194,0.515,196,1.728,213,2.947,214,1.584,215,1.584,234,2.521,300,2.899,306,1.759,308,1.978,309,2.27,333,1.759,459,4.397,460,2.27,461,4.154,462,4.548,463,3.891,464,4.548,465,4.548,466,3.891,467,2.715,468,5.258,469,2.715,470,2.715,471,3.891,472,5.471,473,3.891,474,3.891,475,2.715,476,2.715,477,2.715,478,3.891,479,3.891,480,2.27,481,4.548,482,2.715,483,2.715,484,2.715,485,2.715,486,2.715,487,2.715,488,2.715,489,3.891,490,2.715,491,2.715,492,2.715,493,2.715,494,2.715,495,2.715,496,2.715,497,2.715]],["title/components/SearchComponent.html",[0,0.469,64,0.946]],["body/components/SearchComponent.html",[0,0.614,1,0.695,2,1.318,3,0.323,4,0.188,5,0.96,6,0.96,7,0.96,8,0.96,9,0.188,11,0.96,12,2.388,13,2.03,15,1.43,17,1.43,19,0.813,20,0.032,21,0.544,22,0.217,23,0.418,43,0.816,44,1.43,45,1.318,46,0.96,47,1.894,48,0.96,49,1.309,50,0.96,51,0.695,52,1.43,53,0.695,54,0.5,55,0.641,56,0.96,57,0.695,58,0.96,59,0.641,60,0.96,61,0.695,62,0.884,63,0.96,64,1.372,65,0.96,66,0.695,67,0.753,68,0.458,69,0.96,70,0.96,71,0.011,72,0.017,73,0.011,124,1.043,143,3.924,144,1.522,156,0.217,157,1.122,160,1.674,162,1.59,175,1.522,183,1.555,184,1.859,188,0.683,190,2.06,192,0.753,194,0.713,196,2.31,199,2.203,202,1.043,226,1.867,237,1.638,243,3.035,245,1.746,246,1.746,252,1.522,253,1.711,254,1.138,255,2.268,261,1.245,272,2.711,275,3.369,276,3.005,277,1.711,282,1.522,286,1.711,287,1.711,290,1.711,300,1.371,326,1.522,363,1.245,369,2.268,370,2.268,431,1.964,432,1.964,433,1.711,435,1.964,437,1.964,438,1.964,439,1.964,440,1.964,448,2.55,498,1.964,499,4.184,500,3.5,501,4.184,502,4.184,503,3.5,504,3.5,505,3.5,506,5.386,507,3.5,508,3.5,509,2.349,510,2.349,511,2.349,512,3.5,513,2.349,514,3.5,515,2.349,516,2.349,517,2.349,518,2.349,519,1.711,520,1.711,521,1.711,522,2.349,523,3.5,524,2.349,525,2.349,526,2.349,527,3.5,528,2.349,529,2.349,530,2.349,531,2.349,532,2.349,533,2.349,534,2.349,535,2.349,536,2.349,537,3.5,538,3.5,539,3.5]],["title/injectables/SearchService.html",[310,1.306,414,2.071]],["body/injectables/SearchService.html",[3,0.344,4,0.298,9,0.298,14,2.18,19,0.834,20,0.032,21,0.865,22,0.344,23,0.665,49,1.218,71,0.018,72,0.023,73,0.018,97,2.721,156,0.344,157,1.551,160,1.68,162,1.198,166,1.659,188,0.944,192,1.198,194,0.751,199,2.149,226,2.137,230,2.343,237,1.588,245,1.822,246,1.822,254,1.809,310,1.977,312,2.18,321,2.721,363,2.845,375,2.721,414,3.135,417,2.824,540,3.124,541,4.389,542,4.838,543,3.124,544,4.747,545,4.838,546,4.046,547,4.838,548,3.735,549,4.046,550,3.735,551,3.124,552,3.735,553,3.124,554,4.488,555,2.18,556,3.735,557,3.735,558,3.124,559,3.735]],["title/interfaces/SelectedLocationState.html",[219,0.569,338,1.694]],["body/interfaces/SelectedLocationState.html",[3,0.395,4,0.342,9,0.342,19,0.876,20,0.031,22,0.395,54,1.123,68,1.195,71,0.02,72,0.025,73,0.02,156,0.395,188,1.029,194,0.756,201,2.423,219,0.764,220,1.614,237,1.847,338,2.798,380,4.348,381,3.867,560,3.585,561,3.585]],["title/components/SelectedWeatherComponent.html",[0,0.469,66,0.946]],["body/components/SelectedWeatherComponent.html",[0,0.55,1,0.581,2,1.149,3,0.181,4,0.157,5,1.726,6,0.801,7,0.801,8,0.801,9,0.157,11,0.801,12,2.286,13,1.943,15,1.247,17,1.247,19,0.743,20,0.032,21,0.454,22,0.181,23,0.349,26,1.355,27,1.814,28,3.531,29,2.223,35,1.618,36,1.781,37,1.429,38,1.429,39,1.429,40,1.977,43,0.681,44,1.247,45,1.149,46,0.801,47,1.726,48,0.801,49,0.943,50,0.801,51,0.581,52,1.247,53,0.581,54,1.274,55,0.536,56,0.801,57,0.581,58,0.801,59,0.536,60,0.801,61,0.581,62,0.738,63,0.801,64,0.581,65,0.801,66,1.25,67,1.794,68,0.987,69,0.801,70,0.801,71,0.009,72,0.014,73,0.009,124,0.871,135,4.139,156,0.181,157,0.978,160,1.656,162,1.467,166,0.871,169,1.04,176,2.427,179,2.682,183,1.355,184,1.663,188,0.595,190,1.877,192,0.629,194,0.559,196,2.033,202,0.871,209,1.429,214,1.145,215,1.145,230,1.814,234,1.271,237,0.903,243,2.953,245,0.738,246,0.738,251,1.429,253,1.429,254,0.95,255,1.271,261,1.618,272,2.427,275,2.427,276,2.738,282,1.271,288,1.64,289,4.053,293,1.64,306,1.271,307,1.64,308,1.429,311,3.14,333,1.271,338,2.849,343,1.64,344,1.145,345,1.64,346,1.64,417,2.186,461,1.64,480,1.64,562,4.752,563,1.64,564,3.745,565,3.051,566,3.745,567,3.745,568,3.745,569,3.334,570,3.334,571,1.961,572,1.961,573,1.961,574,1.961,575,1.961,576,1.961,577,1.961,578,1.961,579,3.132,580,1.961,581,1.961,582,1.961,583,1.961,584,1.961,585,3.745,586,3.051,587,3.051,588,3.051,589,4.225,590,4.225,591,3.745,592,1.961,593,3.051,594,1.64,595,1.961,596,1.961,597,1.64,598,1.961,599,1.961,600,3.051,601,3.051,602,1.961,603,3.051,604,3.051,605,3.051,606,4.225,607,1.961,608,1.961,609,1.961,610,1.961,611,1.961,612,1.961,613,1.961]],["title/interfaces/Weather.html",[68,0.623,219,0.569]],["body/interfaces/Weather.html",[3,0.338,4,0.293,9,0.293,20,0.031,22,0.338,68,0.932,71,0.017,72,0.023,73,0.017,156,0.338,188,0.932,194,0.847,219,0.653,220,1.38,225,4.106,226,2.459,227,3.097,228,4.092,230,2.315,231,3.097,232,3.482,319,5.013,614,3.066,615,5.636,616,4.713,617,5.636,618,4.713,619,5.636,620,4.713,621,5.636,622,5.636,623,5.636,624,3.666,625,3.666]],["title/injectables/WeatherService.html",[310,1.306,415,2.071]],["body/injectables/WeatherService.html",[3,0.311,4,0.269,9,0.269,14,1.969,19,0.878,20,0.032,21,0.782,22,0.311,23,0.601,49,1.285,68,0.995,71,0.016,72,0.021,73,0.016,97,2.458,156,0.311,157,1.451,160,1.733,162,1.451,166,2.01,176,1.789,188,0.882,192,1.082,194,0.675,201,1.27,202,1.499,226,1.27,230,2.191,237,1.339,245,1.922,246,1.922,254,1.634,261,1.789,283,2.458,310,1.849,312,1.969,321,2.458,363,2.706,376,2.822,415,2.932,417,2.641,458,2.822,543,2.822,544,4.562,546,3.784,549,3.784,551,2.822,553,2.822,554,4.757,555,2.641,558,3.784,626,2.822,627,4.266,628,5.105,629,4.525,630,4.525,631,4.525,632,4.525,633,3.374,634,4.525,635,3.374,636,3.374,637,3.374,638,3.374,639,3.374,640,4.525,641,3.374,642,3.374,643,3.374]],["title/coverage.html",[644,3.647]],["body/coverage.html",[0,0.859,1,0.792,9,0.214,10,2.239,20,0.031,23,0.477,51,0.792,53,0.792,54,0.57,55,0.731,57,0.792,59,0.731,61,0.792,64,0.792,66,0.792,68,0.522,71,0.013,72,0.018,73,0.013,104,1.951,127,2.807,131,1.951,133,1.735,135,1.951,141,1.951,146,1.563,153,1.951,155,2.239,182,2.239,189,1.563,194,0.354,199,1.189,201,1.008,219,1.042,221,2.239,222,2.239,236,2.239,237,1.14,238,2.239,239,2.239,252,1.735,271,2.239,300,3.867,310,2.017,311,1.735,313,2.239,327,2.239,335,2.239,338,1.42,347,2.239,354,1.735,355,2.239,356,2.239,359,2.239,360,2.239,368,3.198,378,1.951,382,1.951,403,2.239,407,2.239,414,1.735,415,1.735,459,2.239,460,2.239,498,2.239,519,1.951,520,2.807,521,1.951,540,2.239,541,2.807,555,1.563,560,2.239,561,2.239,562,2.239,563,2.239,569,1.951,570,1.951,614,2.239,626,2.239,627,2.807,644,2.239,645,2.678,646,2.678,647,2.678,648,2.239,649,3.222,650,6.344,651,6.39,652,2.239,653,4.128,654,2.239,655,5.446,656,5.446,657,4.513,658,2.678,659,2.678,660,2.678,661,2.678,662,2.678,663,2.678,664,4.693,665,2.239,666,2.239,667,2.239,668,2.678,669,2.239,670,2.239,671,2.239,672,2.239,673,3.222,674,2.239,675,2.239,676,2.678,677,2.678]],["title/dependencies.html",[77,2.49,678,2.669]],["body/dependencies.html",[20,0.032,21,1.012,71,0.021,72,0.025,73,0.021,77,2.832,93,4.466,94,3.461,122,3.655,124,2.372,126,3.655,130,3.183,175,2.832,202,1.941,679,4.37,680,6.408,681,4.37,682,4.37,683,4.37,684,5.768,685,4.37,686,4.37,687,4.37,688,4.37,689,4.37,690,4.37,691,4.37,692,4.37,693,4.37,694,4.37,695,4.37]],["title/miscellaneous/functions.html",[696,1.729,697,3.214]],["body/miscellaneous/functions.html",[20,0.029,49,1.242,71,0.023,72,0.027,73,0.023,131,4.182,156,0.455,245,1.857,246,1.857,344,2.879,368,3.196,371,4.801,404,4.125,696,3.196,697,4.125,698,4.125]],["title/index.html",[156,0.246,699,2.669,700,2.669]],["body/index.html",[0,0.811,4,0.317,13,1.38,20,0.024,49,1,71,0.019,72,0.024,73,0.019,89,2.893,165,3.322,231,3.261,365,2.893,555,2.318,701,3.972,702,5.032,703,3.972,704,5.524,705,5.524,706,3.972,707,3.972,708,5.032,709,5.993,710,6.219,711,3.972,712,3.972,713,3.972,714,3.972,715,3.972,716,3.972,717,3.972,718,3.972,719,3.972,720,3.972,721,5.524,722,5.524,723,3.972,724,5.993,725,3.972,726,3.972,727,3.972,728,3.972,729,3.972,730,3.972,731,3.322,732,5.032,733,5.808,734,3.972,735,5.032,736,5.032,737,3.972,738,5.808,739,3.972,740,3.972,741,5.524,742,3.972,743,3.972,744,3.972,745,3.972]],["title/modules.html",[76,2.546]],["body/modules.html",[20,0.028,71,0.024,72,0.028,73,0.024,75,3.247,76,2.925,86,2.925,94,3.247,746,5.012,747,5.012,748,5.794,749,5.012,750,5.012]],["title/overview.html",[751,3.647]],["body/overview.html",[1,1.836,2,1.48,20,0.031,23,0.7,43,1.366,51,1.627,53,1.627,55,1.501,57,1.627,59,1.501,61,1.627,64,1.627,66,1.627,71,0.019,72,0.024,73,0.019,74,2.548,75,4.309,76,2.295,77,2.548,78,3.288,79,3.288,80,3.288,81,2.864,82,3.288,83,3.288,84,3.288,85,3.288,86,3.209,87,4.182,88,3.288,89,2.864,173,2.548,220,1.48,312,2.295,326,2.548,751,3.288,752,3.932,753,5,754,3.288,755,3.932]],["title/routes.html",[173,2.826]],["body/routes.html",[20,0.028,71,0.024,72,0.028,73,0.024,173,3.344]],["title/miscellaneous/variables.html",[696,1.729,756,3.214]],["body/miscellaneous/variables.html",[20,0.032,54,0.312,67,0.469,68,1.043,71,0.004,72,0.007,73,0.009,127,1.758,146,0.478,156,0.076,166,1.232,176,0.776,179,1.47,194,0.742,201,0.747,210,2.878,212,2.878,223,3.304,224,3.304,225,2.878,227,0.531,229,3.304,230,2.785,231,3.25,232,3.654,233,3.304,234,3.25,235,4.195,237,0.714,252,0.949,261,0.776,324,0.597,326,3.615,328,1.225,329,1.225,331,1.225,332,1.225,333,0.949,334,1.225,344,2.624,357,4.918,358,4.499,361,4.3,362,4.3,363,2.726,364,4.3,365,3.746,368,0.531,369,1.564,370,0.949,372,0.685,378,1.446,379,2.987,380,1.067,381,0.949,382,1.067,383,0.685,384,2.796,385,0.685,386,0.685,387,0.685,388,0.685,389,1.66,390,0.685,391,0.685,392,0.685,393,0.685,394,0.685,395,0.685,396,2.019,397,0.685,398,0.685,399,0.685,400,0.685,401,0.685,402,0.685,417,2.842,421,2.019,422,1.225,427,1.66,428,1.66,429,1.66,433,1.067,448,1.758,519,1.067,520,1.758,521,0.597,541,1.758,555,1.409,569,1.067,570,1.067,579,4.249,594,1.225,597,1.225,616,4.195,618,3.556,620,3.556,627,1.758,648,0.685,649,2.019,652,0.685,653,2.987,654,0.685,664,0.685,665,1.225,666,1.225,667,1.225,669,0.685,670,0.685,671,0.685,672,0.685,673,0.685,674,1.225,675,1.225,696,0.531,698,1.225,731,1.225,754,1.225,756,0.685,757,3.343,758,1.464,759,0.819,760,0.819,761,0.819,762,0.819,763,0.819,764,0.819,765,0.819,766,0.819,767,3.343,768,3.343,769,0.819,770,0.819,771,2.414,772,4.252,773,3.572,774,1.464,775,1.464,776,1.464,777,1.464,778,1.464,779,1.464,780,1.464,781,1.464,782,2.414,783,4.252,784,2.414,785,1.464,786,1.464,787,1.464,788,5.016,789,5.016,790,1.464,791,3.951,792,3.572,793,3.951,794,3.951,795,3.951,796,3.951,797,2.414,798,1.464,799,1.464,800,1.464,801,1.464,802,2.414,803,1.464,804,1.464,805,1.464,806,1.464,807,2.414,808,1.464,809,1.464,810,1.464,811,1.464,812,2.414,813,1.464,814,1.464,815,1.464,816,1.464,817,1.464,818,1.464,819,2.414,820,1.464,821,5.252,822,1.464,823,3.079,824,2.414,825,3.079,826,2.414,827,1.464,828,1.464,829,2.414,830,1.464,831,1.464,832,1.464,833,1.464,834,1.464,835,1.464,836,1.464,837,1.464,838,1.464,839,1.464,840,1.464,841,2.414,842,1.464,843,1.464,844,1.464,845,1.464,846,1.464,847,1.464,848,1.464,849,1.464,850,1.464,851,1.464,852,1.464,853,1.464,854,1.464,855,1.464,856,1.464,857,1.464,858,1.464,859,1.464,860,1.464,861,3.572,862,1.464,863,1.464,864,1.464,865,1.464,866,1.464,867,1.464,868,1.464,869,1.464,870,1.464,871,1.464,872,1.464,873,1.464,874,1.464,875,1.464,876,1.464,877,1.464,878,1.464,879,1.464,880,1.464,881,1.464,882,1.464,883,1.464,884,1.464,885,1.464,886,1.464,887,1.464,888,2.414,889,2.414,890,1.464,891,1.464,892,1.464,893,1.464]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":300,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["0.25fr",{"_index":611,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["0.5fr",{"_index":606,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["0.75fr",{"_index":612,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["0/1",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["00e322",{"_index":481,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["01t07:00:00+03:00",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01t08:00:00+03:00",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02t07:00:00+03:00",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03t07:00:00+03:00",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":326,"title":{},"body":{"injectables/FavoritesService.html":{},"components/SearchComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/FavoritesComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["1000",{"_index":204,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["100px",{"_index":605,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["10px",{"_index":489,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["158f54",{"_index":303,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["1596081600",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1596168000",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1596254400",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1596258000",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1596340800",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1596427200",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":295,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["17",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1700d9",{"_index":483,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["170px",{"_index":607,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["182px",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["18px",{"_index":493,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["19.2",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.5",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1ec574",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["1fr",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["1px",{"_index":485,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["2",{"_index":752,"title":{},"body":{"overview.html":{}}}],["20.6",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.8",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200px",{"_index":266,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["2020",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["203973",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20px",{"_index":491,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["21.4",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["215854",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2174076",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["229017",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["2551",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["258033",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.6",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":488,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["3",{"_index":755,"title":{},"body":{"overview.html":{}}}],["30.4",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.5",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30t07:00:00+03:00",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.1",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31679",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31t07:00:00+03:00",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["328328",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["329139",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["345px",{"_index":610,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["35",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":754,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":494,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["41",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44945",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":302,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["46861b",{"_index":299,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["4px",{"_index":486,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["510px",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{}}}],["55489",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":609,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["6.5.4",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["61ce17",{"_index":292,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["63",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7000",{"_index":439,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["75",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8451",{"_index":209,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["8457",{"_index":602,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["9",{"_index":753,"title":{},"body":{"overview.html":{}}}],["9.1.11",{"_index":706,"title":{},"body":{"index.html":{}}}],["9.1.12",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["9.1.3",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["accuweather",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":371,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/functions.html":{}}}],["actions",{"_index":412,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["actions/locations.actions",{"_index":374,"title":{},"body":{"interfaces/LocationState.html":{}}}],["actionsw",{"_index":413,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["activatedroute",{"_index":506,"title":{},"body":{"components/SearchComponent.html":{}}}],["activeitem",{"_index":464,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["adasdasdadasdas",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":594,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["addfavorite",{"_index":569,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adfqawqwqqw",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administrativearea",{"_index":361,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/variables.html":{}}}],["afsascasfcasdf",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert('could",{"_index":593,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["align",{"_index":308,"title":{},"body":{"components/FavoritesComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["angola",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":704,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoriteCardComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["animate.css",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["anywhere",{"_index":270,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["ao",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":428,"title":{},"body":{"injectables/LocationsEffects.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"index.html":{}}}],["app.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":153,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":86,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":317,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["array.findindex(elem",{"_index":323,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["artifacts",{"_index":725,"title":{},"body":{"index.html":{}}}],["asdasdasdasdasdasdasd",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asdasdasdasdasdasdasdasdasdasdasdasdasdasdasd",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/mocks/forecast",{"_index":639,"title":{},"body":{"injectables/WeatherService.html":{}}}],["assets/mocks/suggestions",{"_index":552,"title":{},"body":{"injectables/SearchService.html":{}}}],["auto",{"_index":267,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/HomeComponent.html":{}}}],["autocompletemodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":715,"title":{},"body":{"index.html":{}}}],["available",{"_index":750,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b0ffd0",{"_index":301,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["b8ff68",{"_index":490,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["background",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/FavoritesComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{}}}],["belgium",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["benguela",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":480,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["bgu",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":319,"title":{},"body":{"injectables/FavoritesService.html":{},"interfaces/Weather.html":{}}}],["bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["br",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brabant",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brazil",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":748,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":167,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":724,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["c",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ca",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canada",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":185,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["card'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["card.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":187,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["card.component.scss",{"_index":186,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["card.component.ts",{"_index":239,"title":{},"body":{"components/FavoriteCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:13",{"_index":244,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["card.component.ts:16",{"_index":250,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["card.component.ts:18",{"_index":248,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["card/card.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["card/favorite",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/FavoriteCardComponent.html":{},"coverage.html":{}}}],["cardcomponent",{"_index":51,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["catcherror",{"_index":453,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["catcherror((err",{"_index":430,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["category",{"_index":334,"title":{},"body":{"interfaces/Forecast.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["change",{"_index":717,"title":{},"body":{"index.html":{}}}],["check",{"_index":744,"title":{},"body":{"index.html":{}}}],["city",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":23,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["clear",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":705,"title":{},"body":{"index.html":{}}}],["closable",{"_index":440,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["cluster_appmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":719,"title":{},"body":{"index.html":{}}}],["color",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{}}}],["column",{"_index":497,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["columns",{"_index":608,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"overview.html":{}}}],["const",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FavoritesService.html":{},"interfaces/LocationState.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(actions",{"_index":411,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["constructor(favoritesservice",{"_index":571,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["constructor(http",{"_index":543,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":254,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(router",{"_index":241,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["constructor(store",{"_index":277,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{}}}],["container",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["content",{"_index":169,"title":{},"body":{"classes/AppPage.html":{},"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["context",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":362,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":644,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":418,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["createreducer",{"_index":372,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":422,"title":{},"body":{"injectables/LocationsEffects.html":{},"miscellaneous/variables.html":{}}}],["currentweather",{"_index":381,"title":{},"body":{"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"interfaces/SelectedLocationState.html":{},"miscellaneous/variables.html":{}}}],["daily",{"_index":330,"title":{},"body":{"interfaces/Forecast.html":{}}}],["dailyforecast",{"_index":189,"title":{"interfaces/DailyForecast.html":{}},"body":{"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Forecast.html":{},"coverage.html":{}}}],["dailyforecast.day.iconphrase",{"_index":211,"title":{},"body":{"components/CardComponent.html":{}}}],["dailyforecast.epochdate",{"_index":203,"title":{},"body":{"components/CardComponent.html":{}}}],["dailyforecast.temperature.maximum.value",{"_index":208,"title":{},"body":{"components/CardComponent.html":{}}}],["dailyforecast.temperature.minimum.value",{"_index":207,"title":{},"body":{"components/CardComponent.html":{}}}],["dailyforecasts",{"_index":328,"title":{},"body":{"interfaces/Forecast.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":367,"title":{},"body":{"interfaces/Location.html":{}}}],["data.ts",{"_index":356,"title":{},"body":{"interfaces/IdxData.html":{},"coverage.html":{}}}],["date",{"_index":223,"title":{},"body":{"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["date:'eeee",{"_index":205,"title":{},"body":{"components/CardComponent.html":{}}}],["date:'longdate",{"_index":206,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["date:\\'eeee",{"_index":217,"title":{},"body":{"components/CardComponent.html":{}}}],["date:\\'longdate",{"_index":218,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["day",{"_index":210,"title":{},"body":{"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":417,"title":{},"body":{"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":160,"title":{},"body":{"classes/AppPage.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":77,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derry",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail",{"_index":437,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["details",{"_index":380,"title":{},"body":{"interfaces/LocationState.html":{},"interfaces/SelectedLocationState.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":712,"title":{},"body":{"index.html":{}}}],["development",{"_index":707,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["direction",{"_index":496,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":723,"title":{},"body":{"index.html":{}}}],["directory",{"_index":728,"title":{},"body":{"index.html":{}}}],["display",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["dist",{"_index":727,"title":{},"body":{"index.html":{}}}],["div",{"_index":307,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["docs/.../default",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/.../forecast",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/.../suggestions",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/assets/default",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["docs/assets/mocks/forecast",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["docs/assets/mocks/suggestions",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["drs",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":249,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["e2e",{"_index":739,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["effectivedate",{"_index":331,"title":{},"body":{"interfaces/Forecast.html":{},"miscellaneous/variables.html":{}}}],["effectiveepochdate",{"_index":332,"title":{},"body":{"interfaces/Forecast.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([locationseffects",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["elem",{"_index":398,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["elem.location.key",{"_index":324,"title":{},"body":{"injectables/FavoritesService.html":{},"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["element(by.css('app",{"_index":168,"title":{},"body":{"classes/AppPage.html":{}}}],["empty",{"_index":441,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["end",{"_index":738,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endepochdate",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enga",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["epochdate",{"_index":224,"title":{},"body":{"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["epochtime",{"_index":615,"title":{},"body":{"interfaces/Weather.html":{}}}],["epw",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.message",{"_index":436,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["error",{"_index":434,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["evenly",{"_index":216,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{}}}],["execute",{"_index":735,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":579,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":54,"title":{"interfaces/Favorite.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocationState.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favorite.location.key",{"_index":325,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["favorite.location.localizedname",{"_index":262,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favorite.weather.epochtime",{"_index":263,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favorite.weather.temperature.metric.value",{"_index":264,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favorite.weather.weathertext",{"_index":265,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favoritecardcomponent",{"_index":53,"title":{"components/FavoriteCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favoriteidx",{"_index":322,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["favoritekey",{"_index":596,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["favorites",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"interfaces/LocationState.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["favorites')).subscribe",{"_index":288,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["favorites'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["favorites.component.html",{"_index":274,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":273,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites.component",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["favoritescomponent",{"_index":55,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favoriteselected",{"_index":240,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favoriteselected(e",{"_index":247,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["favoritesservice",{"_index":311,"title":{"injectables/FavoritesService.html":{}},"body":{"injectables/FavoritesService.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{}}}],["favoritestmp",{"_index":396,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["favoritestmp.push(payload.favorite",{"_index":399,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["ff8000",{"_index":492,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["ffe399",{"_index":495,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["fff",{"_index":487,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":718,"title":{},"body":{"index.html":{}}}],["filteredlocations",{"_index":501,"title":{},"body":{"components/SearchComponent.html":{}}}],["filterlocations",{"_index":503,"title":{},"body":{"components/SearchComponent.html":{}}}],["filterlocations(input",{"_index":508,"title":{},"body":{"components/SearchComponent.html":{}}}],["finder",{"_index":479,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["flag",{"_index":730,"title":{},"body":{"index.html":{}}}],["flemish",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":213,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/MainHeaderComponent.html":{}}}],["forecast",{"_index":201,"title":{"interfaces/Forecast.html":{}},"body":{"components/CardComponent.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"interfaces/SelectedLocationState.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecast'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["forecast.component.html",{"_index":337,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":336,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.ts",{"_index":222,"title":{},"body":{"interfaces/DailyForecast.html":{},"coverage.html":{}}}],["forecast/213225?day=1&unit=c&lang=en",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/213225?day=2&unit=c&lang=en",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/213225?day=3&unit=c&lang=en",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/213225?day=4&unit=c&lang=en",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/213225?day=5&unit=c&lang=en",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/213225?unit=c&lang=en",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forecast/forecast.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["forecastcomponent",{"_index":57,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forecastres",{"_index":627,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":403,"title":{},"body":{"interfaces/LocationState.html":{},"coverage.html":{}}}],["functions",{"_index":697,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":740,"title":{},"body":{"index.html":{}}}],["fw",{"_index":473,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["gb",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":721,"title":{},"body":{"index.html":{}}}],["generated",{"_index":703,"title":{},"body":{"index.html":{}}}],["getcurrentweather",{"_index":629,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentweather(location",{"_index":632,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getforecast",{"_index":630,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getforecast(location",{"_index":634,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getresults",{"_index":542,"title":{},"body":{"injectables/SearchService.html":{}}}],["getresults(input",{"_index":547,"title":{},"body":{"injectables/SearchService.html":{}}}],["getting",{"_index":699,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":743,"title":{},"body":{"index.html":{}}}],["gradient(center",{"_index":298,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["gradient(ellipse",{"_index":305,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["graph",{"_index":749,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["guinea",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h1",{"_index":482,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["hampshire",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasprecipitation",{"_index":616,"title":{},"body":{"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":461,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["header'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["header.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["header.component.html",{"_index":463,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.scss",{"_index":462,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts",{"_index":460,"title":{},"body":{"components/MainHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:10",{"_index":469,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":466,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":467,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header/main",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/MainHeaderComponent.html":{},"coverage.html":{}}}],["headline",{"_index":329,"title":{},"body":{"interfaces/Forecast.html":{},"miscellaneous/variables.html":{}}}],["heart",{"_index":475,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["height",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["help",{"_index":741,"title":{},"body":{"index.html":{}}}],["herolo",{"_index":478,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["heroloweatherfinder",{"_index":701,"title":{},"body":{"index.html":{}}}],["home",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{}}}],["home'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["home.component.html",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":59,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["http",{"_index":546,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":714,"title":{},"body":{"index.html":{}}}],["http://m.accuweather.com/en/il/jerusalem/213225/daily",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://m.accuweather.com/en/il/jerusalem/213225/extended",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.accuweather.com/en/il/jerusalem/213225/daily",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":544,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":551,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["httpparams().set('apikey",{"_index":640,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpparams().set('q",{"_index":556,"title":{},"body":{"injectables/SearchService.html":{}}}],["icon",{"_index":234,"title":{},"body":{"interfaces/DailyForecast.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["iconphrase",{"_index":235,"title":{},"body":{"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":357,"title":{},"body":{"interfaces/IdxData.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":366,"title":{},"body":{"interfaces/Location.html":{}}}],["idxdata",{"_index":354,"title":{"interfaces/IdxData.html":{}},"body":{"interfaces/IdxData.html":{},"interfaces/Location.html":{},"coverage.html":{}}}],["il",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imperial",{"_index":624,"title":{},"body":{"interfaces/Weather.html":{}}}],["implements",{"_index":183,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["important",{"_index":613,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":156,"title":{"index.html":{}},"body":{"classes/AppPage.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["india",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{}}}],["initialstate",{"_index":378,"title":{},"body":{"interfaces/LocationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":310,"title":{"injectables/FavoritesService.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/FavoritesService.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":312,"title":{},"body":{"injectables/FavoritesService.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":199,"title":{"interfaces/Input.html":{}},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"interfaces/Input.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["input.indexof",{"_index":527,"title":{},"body":{"components/SearchComponent.html":{}}}],["input.length",{"_index":533,"title":{},"body":{"components/SearchComponent.html":{}}}],["input.substring(0",{"_index":528,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputs",{"_index":191,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{}}}],["interface",{"_index":219,"title":{"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"interfaces/Forecast.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"interfaces/SelectedLocationState.html":{},"interfaces/Weather.html":{}},"body":{"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"interfaces/Forecast.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"interfaces/SelectedLocationState.html":{},"interfaces/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":220,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"interfaces/Forecast.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"interfaces/SelectedLocationState.html":{},"interfaces/Weather.html":{},"overview.html":{}}}],["interfaces/favorite",{"_index":320,"title":{},"body":{"injectables/FavoritesService.html":{},"interfaces/LocationState.html":{}}}],["interfaces/forecast",{"_index":458,"title":{},"body":{"injectables/LocationsEffects.html":{},"injectables/WeatherService.html":{}}}],["interfaces/input",{"_index":456,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["interfaces/location",{"_index":375,"title":{},"body":{"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{}}}],["interfaces/selected",{"_index":377,"title":{},"body":{"interfaces/LocationState.html":{}}}],["interfaces/weather",{"_index":376,"title":{},"body":{"interfaces/LocationState.html":{},"injectables/WeatherService.html":{}}}],["isdaytime",{"_index":617,"title":{},"body":{"interfaces/Weather.html":{}}}],["isfavorite",{"_index":566,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["isfavoriteexist",{"_index":314,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["isfavoriteexist(favorite",{"_index":316,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["ismetrictemp",{"_index":567,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["isnavigation",{"_index":260,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["israel",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":309,"title":{},"body":{"components/FavoritesComponent.html":{},"components/MainHeaderComponent.html":{}}}],["items3",{"_index":465,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["justify",{"_index":214,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["ka",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":737,"title":{},"body":{"index.html":{}}}],["karnataka",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":363,"title":{},"body":{"interfaces/Location.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["keyfiltermodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["kingdom",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":471,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"overview.html":{}}}],["life",{"_index":438,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["link",{"_index":618,"title":{},"body":{"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":227,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Forecast.html":{},"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["lnd",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":421,"title":{},"body":{"injectables/LocationsEffects.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentweather",{"_index":408,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["loadforecast",{"_index":409,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["loadsearch",{"_index":410,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["localizedname",{"_index":358,"title":{},"body":{"interfaces/IdxData.html":{},"interfaces/Location.html":{},"miscellaneous/variables.html":{}}}],["localobservationdatetime",{"_index":619,"title":{},"body":{"interfaces/Weather.html":{}}}],["location",{"_index":237,"title":{"interfaces/Location.html":{}},"body":{"interfaces/Favorite.html":{},"components/ForecastComponent.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["location.administrativearea.id",{"_index":539,"title":{},"body":{"components/SearchComponent.html":{}}}],["location.country.localizedname",{"_index":538,"title":{},"body":{"components/SearchComponent.html":{}}}],["location.localizedname",{"_index":537,"title":{},"body":{"components/SearchComponent.html":{}}}],["location.ts",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationactions",{"_index":373,"title":{},"body":{"interfaces/LocationState.html":{}}}],["locationname",{"_index":502,"title":{},"body":{"components/SearchComponent.html":{}}}],["locations",{"_index":291,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["locationseffects",{"_index":133,"title":{"injectables/LocationsEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocationsEffects.html":{},"coverage.html":{}}}],["locationsreducer",{"_index":382,"title":{},"body":{"interfaces/LocationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationsreducer(state",{"_index":406,"title":{},"body":{"interfaces/LocationState.html":{}}}],["locationsreducerfunc",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["locationsreducerfunc(state",{"_index":404,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/functions.html":{}}}],["locationstate",{"_index":146,"title":{"interfaces/LocationState.html":{}},"body":{"modules/AppModule.html":{},"interfaces/LocationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logonly",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["londa",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londengo",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londerzeel",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londokomanana",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londol",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["london",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londonderry",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["londrina",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madagascar",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mahajanga",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["mainheadercomponent",{"_index":61,"title":{"components/MainHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":284,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/LocationsEffects.html":{}}}],["map((currentweather",{"_index":426,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["map((forecast",{"_index":444,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["map((suggestions",{"_index":450,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["maxage",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":233,"title":{},"body":{"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["menuitem",{"_index":468,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["mergemap",{"_index":423,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["message.detail",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["message.summary",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["messagemodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["messageservice",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["methods",{"_index":157,"title":{},"body":{"classes/AppPage.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["metric",{"_index":625,"title":{},"body":{"interfaces/Weather.html":{}}}],["mg",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mild",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":229,"title":{},"body":{"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["minmax(100px,auto",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["minmax(34px",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["miscellaneous",{"_index":696,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobilelink",{"_index":620,"title":{},"body":{"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":553,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["mock.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockweather",{"_index":628,"title":{},"body":{"injectables/WeatherService.html":{}}}],["module",{"_index":74,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":76,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":742,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moz",{"_index":296,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":713,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":555,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":710,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":276,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["ngoninit",{"_index":190,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["ngrx/effects",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocationsEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"interfaces/LocationState.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"dependencies.html":{}}}],["nh",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["night",{"_index":212,"title":{},"body":{"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":379,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":228,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Forecast.html":{},"interfaces/Location.html":{},"interfaces/Weather.html":{}}}],["object",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":197,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{}}}],["oftype",{"_index":452,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["oftype('[search",{"_index":447,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["oftype('[selectedweather",{"_index":420,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["on(locationactions.addfavorite",{"_index":395,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.removefavorite",{"_index":400,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.searchload",{"_index":383,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.searchloadsuccess",{"_index":386,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.selectedweatherload",{"_index":388,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.selectedweatherloadforecastsuccess",{"_index":393,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["on(locationactions.selectedweatherloadsuccess",{"_index":391,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":272,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["ondropdownclick",{"_index":504,"title":{},"body":{"components/SearchComponent.html":{}}}],["ondropdownclick(input",{"_index":512,"title":{},"body":{"components/SearchComponent.html":{}}}],["oninit",{"_index":184,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["onlocationselect",{"_index":505,"title":{},"body":{"components/SearchComponent.html":{}}}],["onlocationselect(selectedlocation",{"_index":514,"title":{},"body":{"components/SearchComponent.html":{}}}],["ontario",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":246,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":268,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["overview",{"_index":751,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p7mcgbkmohq6gad0qbaxd5ihgwpt4wwd",{"_index":549,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["package",{"_index":678,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":293,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["papua",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":245,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":554,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["params.set('apikey",{"_index":557,"title":{},"body":{"injectables/SearchService.html":{}}}],["params.set('metric",{"_index":642,"title":{},"body":{"injectables/WeatherService.html":{}}}],["paran",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":384,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.currentweather[0",{"_index":392,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.favoritekey",{"_index":402,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.forecast",{"_index":394,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.input",{"_index":385,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.selectedlocation",{"_index":390,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["payload.suggestions",{"_index":387,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["pg",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pi",{"_index":472,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["pipe",{"_index":425,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["pleasant",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":536,"title":{},"body":{"components/SearchComponent.html":{}}}],["pr",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["precipitationtype",{"_index":621,"title":{},"body":{"interfaces/Weather.html":{}}}],["primeicons",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/button",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/card",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/keyfilter",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/message",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/tabmenu",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/togglebutton",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":255,"title":{},"body":{"components/FavoriteCardComponent.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["prod",{"_index":729,"title":{},"body":{"index.html":{}}}],["production",{"_index":731,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":702,"title":{},"body":{"index.html":{}}}],["promise",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":188,"title":{},"body":{"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoritesComponent.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{}}}],["props",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":165,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":321,"title":{},"body":{"injectables/FavoritesService.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["queryparams",{"_index":259,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["radial",{"_index":297,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["rank",{"_index":364,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":745,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":716,"title":{},"body":{"index.html":{}}}],["remove",{"_index":597,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["removefavorite",{"_index":570,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":166,"title":{},"body":{"classes/AppPage.html":{},"injectables/FavoritesService.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":162,"title":{},"body":{"classes/AppPage.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/FavoritesService.html":{},"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["router",{"_index":242,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["routerlink",{"_index":474,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["routermodule",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":173,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rows",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["run",{"_index":709,"title":{},"body":{"index.html":{}}}],["running",{"_index":732,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":202,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":638,"title":{},"body":{"injectables/WeatherService.html":{}}}],["rxjs/operators",{"_index":285,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/LocationsEffects.html":{}}}],["scaffolding",{"_index":720,"title":{},"body":{"index.html":{}}}],["screen",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["search",{"_index":448,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["search.component.html",{"_index":500,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":499,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["searchcomponent",{"_index":64,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchload",{"_index":519,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchloadsuccess",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchservice",{"_index":414,"title":{"injectables/SearchService.html":{}},"body":{"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["select",{"_index":282,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["selected",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocationState.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["selectedlocation",{"_index":369,"title":{},"body":{"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["selectedlocation')).subscribe",{"_index":345,"title":{},"body":{"components/ForecastComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["selectedlocation.localizedname},${selectedlocation.country.localizedname},${selectedlocation.administrativearea.id",{"_index":532,"title":{},"body":{"components/SearchComponent.html":{}}}],["selectedlocationstate",{"_index":338,"title":{"interfaces/SelectedLocationState.html":{}},"body":{"components/ForecastComponent.html":{},"interfaces/LocationState.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{}}}],["selectedlocationstate.currentweather.temperature.imperial.value",{"_index":601,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["selectedlocationstate.currentweather.temperature.metric.value",{"_index":600,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["selectedlocationstate.currentweather.weathertext",{"_index":604,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["selectedlocationstate.details.localizedname",{"_index":603,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["selectedweather",{"_index":427,"title":{},"body":{"injectables/LocationsEffects.html":{},"miscellaneous/variables.html":{}}}],["selectedweathercomponent",{"_index":66,"title":{"components/SelectedWeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectedweatherload",{"_index":252,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedweatherloadforecastsuccess",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedweatherloadsuccess",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["serve",{"_index":711,"title":{},"body":{"index.html":{}}}],["server",{"_index":708,"title":{},"body":{"index.html":{}}}],["services/search.service",{"_index":455,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["services/weather.service",{"_index":457,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["severity",{"_index":433,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":484,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["shared/interfaces/daily",{"_index":200,"title":{},"body":{"components/CardComponent.html":{}}}],["shared/interfaces/favorite",{"_index":251,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["shared/interfaces/location",{"_index":518,"title":{},"body":{"components/SearchComponent.html":{}}}],["shared/interfaces/selected",{"_index":343,"title":{},"body":{"components/ForecastComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["shared/ngrx/actions/locations.actions",{"_index":253,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["shared/ngrx/effects/locations.effects",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ngrx/reducers/locations.reducer",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/favorites.service",{"_index":584,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":215,"title":{},"body":{"components/CardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["span')).gettext",{"_index":170,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../locations.actions.ts",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../locations.reducer.ts",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../suggestions",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/card/card.component.ts",{"_index":182,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/card/card.component.ts:11",{"_index":193,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:13",{"_index":198,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:14",{"_index":195,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/favorite",{"_index":238,"title":{},"body":{"components/FavoriteCardComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":271,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:14",{"_index":281,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:15",{"_index":278,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:22",{"_index":280,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:29",{"_index":279,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":335,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:13",{"_index":342,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:14",{"_index":339,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:20",{"_index":341,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:28",{"_index":340,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":347,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:12",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:8",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/main",{"_index":459,"title":{},"body":{"components/MainHeaderComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts",{"_index":498,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:16",{"_index":516,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:17",{"_index":517,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:18",{"_index":507,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":511,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:35",{"_index":509,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:41",{"_index":515,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:45",{"_index":513,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:57",{"_index":510,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/selected",{"_index":562,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/daily",{"_index":221,"title":{},"body":{"interfaces/DailyForecast.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/favorite.ts",{"_index":236,"title":{},"body":{"interfaces/Favorite.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/forecast.ts",{"_index":327,"title":{},"body":{"interfaces/Forecast.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/idx",{"_index":355,"title":{},"body":{"interfaces/IdxData.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/input.ts",{"_index":359,"title":{},"body":{"interfaces/Input.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/location.ts",{"_index":360,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/selected",{"_index":560,"title":{},"body":{"interfaces/SelectedLocationState.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/weather.ts",{"_index":614,"title":{},"body":{"interfaces/Weather.html":{},"coverage.html":{}}}],["src/app/shared/ngrx/actions/locations.actions.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/ngrx/effects/locations.effects.ts",{"_index":407,"title":{},"body":{"injectables/LocationsEffects.html":{},"coverage.html":{}}}],["src/app/shared/ngrx/effects/locations.effects.ts:13",{"_index":416,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["src/app/shared/ngrx/effects/locations.effects.ts:21",{"_index":451,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["src/app/shared/ngrx/effects/locations.effects.ts:45",{"_index":442,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["src/app/shared/ngrx/effects/locations.effects.ts:62",{"_index":445,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["src/app/shared/ngrx/reducers/locations.reducer.ts",{"_index":368,"title":{},"body":{"interfaces/LocationState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/favorites.service.ts",{"_index":313,"title":{},"body":{"injectables/FavoritesService.html":{},"coverage.html":{}}}],["src/app/shared/services/favorites.service.ts:10",{"_index":318,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["src/app/shared/services/favorites.service.ts:7",{"_index":315,"title":{},"body":{"injectables/FavoritesService.html":{}}}],["src/app/shared/services/search.service.ts",{"_index":540,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/shared/services/search.service.ts:10",{"_index":550,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search.service.ts:11",{"_index":545,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/search.service.ts:13",{"_index":548,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/shared/services/weather.service.ts",{"_index":626,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/shared/services/weather.service.ts:13",{"_index":637,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/services/weather.service.ts:14",{"_index":636,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/services/weather.service.ts:15",{"_index":631,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/services/weather.service.ts:17",{"_index":633,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/services/weather.service.ts:21",{"_index":635,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/assets/default",{"_index":521,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/mocks/forecast",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/mocks/suggestions",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":700,"title":{"index.html":{}},"body":{}}],["state",{"_index":344,"title":{},"body":{"components/ForecastComponent.html":{},"interfaces/LocationState.html":{},"components/SelectedWeatherComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.favorites.filter(elem",{"_index":401,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["state.favorites.map(elem",{"_index":397,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["state.selectedlocation",{"_index":389,"title":{},"body":{"interfaces/LocationState.html":{},"miscellaneous/variables.html":{}}}],["state.ts",{"_index":561,"title":{},"body":{"interfaces/SelectedLocationState.html":{},"coverage.html":{}}}],["statements",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":243,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["stored",{"_index":726,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["strabane",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":226,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Forecast.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["subscription",{"_index":275,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["subscription.unsubscribe",{"_index":599,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["subscriptions",{"_index":568,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["suggestions",{"_index":370,"title":{},"body":{"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["suggestions')).subscribe",{"_index":522,"title":{},"body":{"components/SearchComponent.html":{}}}],["suggstionsmock",{"_index":541,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":435,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["sunny",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":746,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":747,"title":{},"body":{"modules.html":{}}}],["ta",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["take",{"_index":454,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["tap",{"_index":283,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/LocationsEffects.html":{},"injectables/WeatherService.html":{}}}],["tc",{"_index":432,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["tel",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["telaviv",{"_index":520,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["temperature",{"_index":225,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["test",{"_index":734,"title":{},"body":{"index.html":{}}}],["tests",{"_index":733,"title":{},"body":{"index.html":{}}}],["text",{"_index":333,"title":{},"body":{"interfaces/Forecast.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["this.actions$.pipe",{"_index":446,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["this.actionsw$.pipe",{"_index":419,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":524,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.activatedroute.snapshot.queryparams.isnavigation",{"_index":525,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.activeitem",{"_index":476,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.favorite",{"_index":589,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.favorite.location",{"_index":257,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["this.favorites",{"_index":289,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["this.favoritesservice.isfavoriteexist(favorite",{"_index":590,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.filteredlocations",{"_index":523,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filteredlocations.slice(0",{"_index":534,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filterlocations(input",{"_index":535,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.http.get(`https://dataservice.accuweather.com/currentconditions/v1/${location",{"_index":641,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location",{"_index":643,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":559,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.isfavorite",{"_index":585,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.items3",{"_index":470,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.items3[0",{"_index":477,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.key",{"_index":558,"title":{},"body":{"injectables/SearchService.html":{},"injectables/WeatherService.html":{}}}],["this.locationname",{"_index":531,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.messageservice.add",{"_index":431,"title":{},"body":{"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{}}}],["this.onlocationselect(telaviv",{"_index":526,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.router.navigate(['/home",{"_index":258,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["this.searchservice.getresults(search.input",{"_index":449,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["this.selectedlocationstate",{"_index":346,"title":{},"body":{"components/ForecastComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["this.selectedlocationstate.currentweather",{"_index":588,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.selectedlocationstate.details",{"_index":587,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.selectedlocationstate.details.key",{"_index":591,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.store.dispatch(addfavorite",{"_index":592,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.store.dispatch(removefavorite",{"_index":595,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.store.dispatch(searchload",{"_index":529,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.store.dispatch(selectedweatherload",{"_index":530,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.store.dispatch(selectedweatherload({selectedlocation",{"_index":256,"title":{},"body":{"components/FavoriteCardComponent.html":{}}}],["this.store.pipe(select('locationstate",{"_index":287,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{}}}],["this.subscription",{"_index":286,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":290,"title":{},"body":{"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/SearchComponent.html":{}}}],["this.subscriptions.foreach((subscription",{"_index":598,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select('locationstate",{"_index":586,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["this.weatherservice.getcurrentweather(input.selectedlocation.key",{"_index":424,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["this.weatherservice.getforecast(input.selectedlocation.key",{"_index":443,"title":{},"body":{"injectables/LocationsEffects.html":{}}}],["toastmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["togglebuttonmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["top",{"_index":294,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["true",{"_index":261,"title":{},"body":{"components/FavoriteCardComponent.html":{},"injectables/LocationsEffects.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":194,"title":{},"body":{"components/CardComponent.html":{},"interfaces/DailyForecast.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"injectables/FavoritesService.html":{},"interfaces/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IdxData.html":{},"interfaces/Input.html":{},"interfaces/Location.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":405,"title":{},"body":{"interfaces/LocationState.html":{}}}],["unit",{"_index":231,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Weather.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["united",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unittype",{"_index":232,"title":{},"body":{"interfaces/DailyForecast.html":{},"interfaces/Weather.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":429,"title":{},"body":{"injectables/LocationsEffects.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":722,"title":{},"body":{"index.html":{}}}],["value",{"_index":230,"title":{},"body":{"interfaces/DailyForecast.html":{},"injectables/LocationsEffects.html":{},"injectables/SearchService.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["variable",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":756,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vbr",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":365,"title":{},"body":{"interfaces/Location.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":736,"title":{},"body":{"index.html":{}}}],["void",{"_index":196,"title":{},"body":{"components/CardComponent.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["weather",{"_index":68,"title":{"interfaces/Weather.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"interfaces/Favorite.html":{},"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HomeComponent.html":{},"interfaces/LocationState.html":{},"injectables/LocationsEffects.html":{},"components/MainHeaderComponent.html":{},"components/SearchComponent.html":{},"interfaces/SelectedLocationState.html":{},"components/SelectedWeatherComponent.html":{},"interfaces/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["weather.component.html",{"_index":565,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.scss",{"_index":564,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts",{"_index":563,"title":{},"body":{"components/SelectedWeatherComponent.html":{},"coverage.html":{}}}],["weather.component.ts:14",{"_index":572,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:22",{"_index":582,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:23",{"_index":581,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:24",{"_index":580,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:25",{"_index":578,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:26",{"_index":583,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:27",{"_index":576,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:46",{"_index":573,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:54",{"_index":577,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:62",{"_index":574,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather.component.ts:69",{"_index":575,"title":{},"body":{"components/SelectedWeatherComponent.html":{}}}],["weather/selected",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/SelectedWeatherComponent.html":{},"coverage.html":{}}}],["weathericon",{"_index":622,"title":{},"body":{"interfaces/Weather.html":{}}}],["weatherservice",{"_index":415,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/LocationsEffects.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weathertext",{"_index":623,"title":{},"body":{"interfaces/Weather.html":{}}}],["webkit",{"_index":304,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HomeComponent.html":{}}}],["weekend",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/FavoriteCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/SelectedWeatherComponent.html":{}}}],["wrap",{"_index":269,"title":{},"body":{"components/FavoriteCardComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{}}}],["zone.js",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n  \n      \n          \n          {{message.summary}}\n          {{message.detail}}\n      \n  \n\n\n    \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                #app-container {\n  display: grid;\n  grid-template-rows: minmax(100px,auto) 1fr;\n  background-color: blue;\n  height: 100%;\n}\n\n@media only screen and (max-width: 510px) {\n  #app-container {\n    display: grid;\n    grid-template-rows: 182px 1fr;\n    background-color: blue;\n    height: 100%;\n  }\n\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{message.summary}}          {{message.detail}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nFavoriteCardComponent\n\nFavoriteCardComponent\n\nAppModule -->\n\nFavoriteCardComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nForecastComponent\n\nForecastComponent\n\nAppModule -->\n\nForecastComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nMainHeaderComponent\n\nMainHeaderComponent\n\nAppModule -->\n\nMainHeaderComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSelectedWeatherComponent\n\nSelectedWeatherComponent\n\nAppModule -->\n\nSelectedWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            FavoriteCardComponent\n                        \n                        \n                            FavoritesComponent\n                        \n                        \n                            ForecastComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            MainHeaderComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectedWeatherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\n\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport {ToastModule} from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport {TabMenuModule} from 'primeng/tabmenu';\nimport {KeyFilterModule} from 'primeng/keyfilter';\nimport {ToggleButtonModule} from 'primeng/togglebutton';\nimport { CardModule, } from 'primeng/card';\n\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { locationsReducerFunc } from './shared/ngrx/reducers/locations.reducer';\nimport { LocationsEffects } from './shared/ngrx/effects/locations.effects';\nimport { SelectedWeatherComponent } from './selected-weather/selected-weather.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { CardComponent } from './card/card.component';\nimport {ButtonModule} from 'primeng/button';\nimport { FavoriteCardComponent } from './favorite-card/favorite-card.component';\nimport { MessageService } from 'primeng/api';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    FavoritesComponent,\n    MainHeaderComponent,\n    SearchComponent,\n    SelectedWeatherComponent,\n    ForecastComponent,\n    CardComponent,\n    FavoriteCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MessageModule,\n    TabMenuModule,\n    AppRoutingModule,\n    AutoCompleteModule,\n    HttpClientModule,\n    KeyFilterModule,\n    ToggleButtonModule,\n    ButtonModule,\n    CardModule,\n    StoreModule.forRoot({ LocationState: locationsReducerFunc }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([LocationsEffects, MessageService]),\n    ToastModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'home', component: HomeComponent\n  },\n  {\n    path: 'favorites', component: FavoritesComponent\n  },\n  {\n    path: '**', redirectTo: 'home'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dailyForecast$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dailyForecast\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/card/card.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dailyForecast\n                    \n                \n                \n                    \n                        Type :         DailyForecast\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/card/card.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/card/card.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dailyForecast$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/card/card.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DailyForecast } from '../shared/interfaces/daily-forecast';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n@Input() dailyForecast: DailyForecast;\n  constructor() { }\n  dailyForecast$: Observable;\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{dailyForecast.EpochDate * 1000 | date:'EEEE'}}\n    \n    {{dailyForecast.EpochDate * 1000 | date:'longDate'}} \n    \n      {{dailyForecast.Temperature.Minimum.Value}} - {{dailyForecast.Temperature.Maximum.Value}} &#8451;\n      Day : {{ dailyForecast.Day.IconPhrase }}\n      \n        Night: {{ dailyForecast.Day.IconPhrase  }}\n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                #card-container{\n  display: flex;\n  justify-content: space-evenly;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{dailyForecast.EpochDate * 1000 | date:\\'EEEE\\'}}        {{dailyForecast.EpochDate * 1000 | date:\\'longDate\\'}}           {{dailyForecast.Temperature.Minimum.Value}} - {{dailyForecast.Temperature.Maximum.Value}} ℃      Day : {{ dailyForecast.Day.IconPhrase }}              Night: {{ dailyForecast.Day.IconPhrase  }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DailyForecast.html":{"url":"interfaces/DailyForecast.html","title":"interface - DailyForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DailyForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/daily-forecast.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Date\n                                \n                                \n                                        Day\n                                \n                                \n                                        EpochDate\n                                \n                                \n                                        Night\n                                \n                                \n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DailyForecast {\n\n  Date: string;\n  EpochDate: number;\n  Temperature: {\n    Minimum: {\n      Value: number,\n      Unit: string,\n      UnitType: number\n    },\n    Maximum: {\n      Value: number,\n      Unit: string,\n      UnitType: number\n    }\n  };\n  Day: {\n    Icon: number,\n    IconPhrase: string,\n  };\n  Night: {\n    Icon: number,\n    IconPhrase: string,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Favorite.html":{"url":"interfaces/Favorite.html","title":"interface - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/favorite.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        location\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         Location\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Location\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         Weather\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Weather\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Location} from './location';\nimport {Weather} from './Weather';\nexport interface Favorite {\n  location: Location;\n  weather: Weather;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoriteCardComponent.html":{"url":"components/FavoriteCardComponent.html","title":"component - FavoriteCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoriteCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorite-card/favorite-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorite-card\n            \n\n            \n                styleUrls\n                ./favorite-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorite-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteSelected\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                favorite\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/favorite-card/favorite-card.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        favorite\n                    \n                \n                \n                    \n                        Type :         Favorite\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/favorite-card/favorite-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            favoriteSelected\n                        \n                        \n                    \n                \n            \n            \n                \nfavoriteSelected(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorite-card/favorite-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorite-card/favorite-card.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Favorite } from '../shared/interfaces/favorite';\nimport { selectedWeatherLoad } from '../shared/ngrx/actions/locations.actions';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-favorite-card',\n  templateUrl: './favorite-card.component.html',\n  styleUrls: ['./favorite-card.component.scss']\n})\nexport class FavoriteCardComponent implements OnInit {\n@Input() favorite: Favorite;\n  constructor(private router: Router, private store: Store) { }\n\n  ngOnInit(): void {\n  }\nfavoriteSelected(e) {\n  this.store.dispatch(selectedWeatherLoad({selectedLocation: this.favorite.location}));\n  this.router.navigate(['/home'], {queryParams: {isNavigation: true}});\n}\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n \n   {{favorite.location.LocalizedName}}\n \n {{favorite.weather.EpochTime * 1000 | date:'longDate'}} \n \n   {{favorite.weather.Temperature.Metric.Value}} &#8451;\n   {{ favorite.weather.WeatherText }}\n \n\n\n\n    \n\n    \n                \n                    ./favorite-card.component.scss\n                \n                #favorite-card-container{\n  width: 200px;\n  height: auto;\n  overflow-wrap: anywhere;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{favorite.location.LocalizedName}}  {{favorite.weather.EpochTime * 1000 | date:\\'longDate\\'}}     {{favorite.weather.Temperature.Metric.Value}} ℃   {{ favorite.weather.WeatherText }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoriteCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favorites\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Favorite[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/favorites/favorites.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/favorites/favorites.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Favorite } from '../shared/interfaces/favorite';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit, OnDestroy {\n\n  favorites: Favorite[];\n  subscription: Subscription;\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.subscription = this.store.pipe(select('LocationState', 'favorites')).subscribe(\n      (favorites: Favorite[]) => {\n        this.favorites = favorites;\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  My favorite Weather Locations\n  \n    No Favorite Locations\n    \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                #favorites-container {\n  background: #61CE17;\n  height: 100%;\n  padding-top: 15px;\n  background: -moz-radial-gradient(center, #46861b 0%, #B0FFD0 45%, #158f54 100%);\n  background: -webkit-radial-gradient(center, #46861b 0%, #B0FFD0 45%, #158f54 100%);\n  background: radial-gradient(ellipse at center, #46861b 0%, #B0FFD0 45%, #158f54 100%);\n  div{\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My favorite Weather Locations      No Favorite Locations                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoritesService.html":{"url":"injectables/FavoritesService.html","title":"injectable - FavoritesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FavoritesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/favorites.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isfavoriteExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/favorites.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isfavoriteExist\n                        \n                        \n                    \n                \n            \n            \n                \nisfavoriteExist(favorite: Favorite, array: Favorite[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/favorites.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    favorite\n                                    \n                                                Favorite\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    array\n                                    \n                                                Favorite[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Favorite } from '../interfaces/favorite';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoritesService {\n\n  constructor() { }\n  isfavoriteExist(favorite: Favorite, array: Favorite[]) {\n    const favoriteIdx = array.findIndex(elem => {\n      return elem.location.Key === favorite.location.Key;\n    });\n\n    return favoriteIdx !== -1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Forecast.html":{"url":"interfaces/Forecast.html","title":"interface - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/forecast.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        DailyForecasts\n                                \n                                \n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:     DailyForecast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DailyForecast[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DailyForecast } from './daily-forecast';\n\nexport interface Forecast {\n  Headline: {\n    EffectiveDate: string;\n    EffectiveEpochDate: number;\n    Text: string;\n    Category: string;\n  };\n  DailyForecasts: DailyForecast[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedLocationState\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLocationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedLocationState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forecast/forecast.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/forecast/forecast.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SelectedLocationState } from '../shared/interfaces/selected-location-state';\nimport { Store, select } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit, OnDestroy {\n\n  selectedLocationState: SelectedLocationState;\n  subscription: Subscription;\n  constructor(private store: Store) { }\n  ngOnInit(): void {\n    this.subscription = this.store.pipe(select('LocationState', 'selectedLocation')).subscribe(\n      (selectedLocationState: SelectedLocationState) => {\n        this.selectedLocationState = selectedLocationState;\n      }\n    );\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n        \n      \n  \n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                #forecast-container{\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                #home-container {\n  background: #61CE17;\n  background: -moz-radial-gradient(center, #61CE17 0%, #B0FFD0 45%, #1EC574 100%);\n  background: -webkit-radial-gradient(center, #61CE17 0%, #B0FFD0 45%, #1EC574 100%);\n  background: radial-gradient(ellipse at center, #61CE17 0%, #B0FFD0 45%, #1EC574 100%);\n  height: 100%;\n  display: grid;\n  grid-template-rows: minmax(34px, auto) 1fr;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdxData.html":{"url":"interfaces/IdxData.html","title":"interface - IdxData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdxData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/idx-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ID\n                                \n                                \n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IdxData {\n  ID: string;\n  LocalizedName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Input.html":{"url":"interfaces/Input.html","title":"interface - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Input {\n  input: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/location.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IdxData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdxData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IdxData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IdxData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IdxData } from './idx-data';\n\n// IdxData\nexport interface Location {\n  Version: number;\n  Key: string;\n  Type: string;\n  Rank: number;\n  LocalizedName: string;\n  Country: IdxData;\n  AdministrativeArea: IdxData;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationState.html":{"url":"interfaces/LocationState.html","title":"interface - LocationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ngrx/reducers/locations.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        favorites\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectedLocation\n                                \n                                \n                                        suggestions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        favorites\n                                    \n                                \n                                \n                                    \n                                        favorites:         Favorite[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Favorite[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedLocation\n                                    \n                                \n                                \n                                    \n                                        selectedLocation:         SelectedLocationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedLocationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suggestions\n                                    \n                                \n                                \n                                    \n                                        suggestions:         Location[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Location[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport * as LocationActions from '../actions/locations.actions';\nimport { Location } from '../../interfaces/location';\nimport { Weather } from '../../interfaces/weather';\nimport { SelectedLocationState } from '../../interfaces/selected-location-state';\nimport { Favorite } from '../../interfaces/favorite';\n\nexport interface LocationState {\n  selected: string;\n  suggestions: Location[];\n  selectedLocation: SelectedLocationState;\n  favorites: Favorite[];\n}\n\nexport const initialState: LocationState = {\n  selected: null,\n  suggestions: [],\n  selectedLocation: {\n    details: null,\n    currentWeather: null,\n    forecast: null,\n  },\n  favorites: []\n};\n\nconst locationsReducer = createReducer(\n  initialState,\n  on(LocationActions.searchLoad, (state, payload) => ({ ...state, selected: payload.input })),\n  on(LocationActions.searchLoadSuccess, (state, payload) => ({ ...state, suggestions: payload.suggestions })),\n  on(LocationActions.selectedWeatherLoad, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, details: payload.selectedLocation }\n    });\n  }),\n  on(LocationActions.selectedWeatherLoadSuccess, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, currentWeather: payload.currentWeather[0] }\n    });\n  }),\n  on(LocationActions.selectedWeatherLoadForecastSuccess, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, forecast: payload.forecast }\n    });\n  }),\n  on(LocationActions.addFavorite, (state, payload) => {\n    const favoritesTmp = state.favorites.map(elem => elem);\n    favoritesTmp.push(payload.favorite);\n    return (\n      {\n        ...state, favorites: favoritesTmp\n      }\n    );\n  }),\n  on(LocationActions.removeFavorite, (state, payload) => {\n    const favoritesTmp = state.favorites.filter(elem => elem.location.Key !== payload.favoriteKey);\n    return (\n      {\n        ...state, favorites: favoritesTmp\n      }\n    );\n  })\n);\n\nexport function locationsReducerFunc(state: LocationState | undefined, action: Action) {\n  return locationsReducer(state, action);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsEffects.html":{"url":"injectables/LocationsEffects.html","title":"injectable - LocationsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ngrx/effects/locations.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCurrentWeather$\n                            \n                            \n                                loadForecast$\n                            \n                            \n                                loadSearch$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, actionsW$: Actions, searchService: SearchService, weatherService: WeatherService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ngrx/effects/locations.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionsW$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCurrentWeather$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actionsW$.pipe(\n    ofType('[SelectedWeather Load]  Load Current Weather'),\n    mergeMap(\n      (input: { selectedLocation: Location }) => this.weatherService.getCurrentWeather(input.selectedLocation.Key)\n        .pipe(\n          map((currentWeather) => ({ type: '[SelectedWeather API]  Update Current Weather', currentWeather })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ngrx/effects/locations.effects.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadForecast$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actionsW$.pipe(\n    ofType('[SelectedWeather Load]  Load Current Weather'),\n    mergeMap(\n      (input: { selectedLocation: Location }) => this.weatherService.getForecast(input.selectedLocation.Key)\n        .pipe(\n          map((forecast: Forecast) => ({ type: '[SelectedWeather API]  Update Forecast', forecast })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ngrx/effects/locations.effects.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSearch$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType('[Search Load] Load Search Results'),\n    mergeMap(\n      (search: Input) => this.searchService.getResults(search.input)\n        .pipe(\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          }),\n          map((suggestions: Location[]) => ({ type: '[Search API]  Update Search Results', suggestions })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ngrx/effects/locations.effects.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport { map, mergeMap, catchError, tap, take } from 'rxjs/operators';\nimport { SearchService } from '../../services/search.service';\nimport { Location } from '../../interfaces/location';\nimport { Input } from '../../interfaces/input';\nimport { WeatherService } from '../../services/weather.service';\nimport { Forecast } from '../../interfaces/forecast';\nimport { MessageService } from 'primeng/api';\n\n@Injectable()\nexport class LocationsEffects {\n  constructor(\n    private actions$: Actions,\n    private actionsW$: Actions,\n    private searchService: SearchService,\n    private weatherService: WeatherService,\n    private messageService: MessageService\n  ) { }\n  loadSearch$ = createEffect(() => this.actions$.pipe(\n    ofType('[Search Load] Load Search Results'),\n    mergeMap(\n      (search: Input) => this.searchService.getResults(search.input)\n        .pipe(\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          }),\n          map((suggestions: Location[]) => ({ type: '[Search API]  Update Search Results', suggestions })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  );\n  loadCurrentWeather$ = createEffect(() => this.actionsW$.pipe(\n    ofType('[SelectedWeather Load]  Load Current Weather'),\n    mergeMap(\n      (input: { selectedLocation: Location }) => this.weatherService.getCurrentWeather(input.selectedLocation.Key)\n        .pipe(\n          map((currentWeather) => ({ type: '[SelectedWeather API]  Update Current Weather', currentWeather })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  );\n  loadForecast$ = createEffect(() => this.actionsW$.pipe(\n    ofType('[SelectedWeather Load]  Load Current Weather'),\n    mergeMap(\n      (input: { selectedLocation: Location }) => this.weatherService.getForecast(input.selectedLocation.Key)\n        .pipe(\n          map((forecast: Forecast) => ({ type: '[SelectedWeather API]  Update Forecast', forecast })),\n          catchError((err) => {\n            this.messageService.add({\n              key: 'tc', severity: 'error', summary: `${err.message}`, detail: `${err.message}`,\n              life: 7000, closable: true\n            });\n            return EMPTY;\n          })\n        )\n    )\n  )\n  );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHeaderComponent.html":{"url":"components/MainHeaderComponent.html","title":"component - MainHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-header/main-header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-header\n            \n\n            \n                styleUrls\n                ./main-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItem\n                            \n                            \n                                items3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main-header/main-header.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-header/main-header.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-header/main-header.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-header/main-header.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.scss']\n})\nexport class MainHeaderComponent implements OnInit {\n  items3: MenuItem[];\n  activeItem: MenuItem;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.items3 = [\n      { label: 'home', icon: 'pi pi-fw pi-home', routerLink: 'home' },\n      { label: 'favorites', icon: 'pi pi-fw pi-heart', routerLink: 'favorites' }\n    ];\n    this.activeItem = this.items3[0];\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    Herolo Weather Finder\n  \n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./main-header.component.scss\n                \n                #main-header-container{\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #00e322;\n}\nh1{\n  color: #1700d9;\n  background: #00e322;\n  text-shadow: 0 -1px 4px #FFF, 0 -2px 10px #b8ff68, 0 -10px 20px #ff8000, 0 -18px 40px #ffe399;\n}\n\n@media only screen and (max-width: 510px) {\n  #main-header-container{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    background-color: #00e322;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Herolo Weather Finder              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredLocations\n                            \n                            \n                                locationName\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterLocations\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDropdownClick\n                            \n                            \n                                onLocationSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, messageService: MessageService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterLocations\n                        \n                        \n                    \n                \n            \n            \n                \nfilterLocations(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDropdownClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDropdownClick(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLocationSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLocationSelect(selectedLocation: Location)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedLocation\n                                    \n                                                Location\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredLocations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '../shared/interfaces/location';\nimport { Store, select } from '@ngrx/store';\nimport { searchLoad, selectedWeatherLoad } from '../shared/ngrx/actions/locations.actions';\nimport { MessageService } from 'primeng/api';\nimport { Subscription } from 'rxjs';\nimport { telAviv } from 'src/assets/default-location';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  locationName: string;\n  subscription: Subscription;\n  filteredLocations: Location[];\n  constructor(private store: Store,\n              private messageService: MessageService,\n              private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription = this.store.pipe(select('LocationState', 'suggestions')).subscribe(\n      suggestions => {\n        this.filteredLocations = suggestions;\n      }\n    );\n    if (this.activatedRoute.snapshot.queryParams && !this.activatedRoute.snapshot.queryParams.isNavigation) {\n      this.onLocationSelect(telAviv);\n    }\n  }\n\n  filterLocations(input: string) {\n    if (input.indexOf(',') !== -1) {\n      input = input.substring(0, input.indexOf(','));\n    }\n    this.store.dispatch(searchLoad({ input }));\n  }\n  onLocationSelect(selectedLocation: Location) {\n    this.store.dispatch(selectedWeatherLoad({ selectedLocation }));\n    this.locationName = `${selectedLocation.LocalizedName},${selectedLocation.Country.LocalizedName},${selectedLocation.AdministrativeArea.ID}`;\n  }\n  onDropdownClick(input) {\n    if (input.length > 0) {\n      this.filteredLocations = this.filteredLocations.slice(0);\n      this.filterLocations(input);\n    } else {\n      this.messageService.add({\n        key: 'tc', severity: 'info', summary: 'Please Type Location', detail: 'No input',\n        life: 7000, closable: true\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n          \n            {{location.LocalizedName}} , {{location.Country.LocalizedName}} , {{location.AdministrativeArea.ID}}\n          \n      \n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{location.LocalizedName}} , {{location.Country.LocalizedName}} , {{location.AdministrativeArea.ID}}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                suggstionsMock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/search.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetResults(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/search.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'p7mcGBKmOHQ6Gad0QBaXD5iHGWpt4wwd'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/search.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            suggstionsMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                    \n                        \n                            Default value : suggstionsMock\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/search.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport {Location} from '../interfaces/location';\nimport {suggstionsMock} from '../../../assets/mocks/suggestions-mock';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  key = 'p7mcGBKmOHQ6Gad0QBaXD5iHGWpt4wwd';\n  suggstionsMock: Location[] = suggstionsMock;\n  constructor(private http: HttpClient) { }\n  getResults(input: string) {\n    let params = new HttpParams().set('q', input);\n    params = params.set('apikey', this.key);\n    return this.http.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete`, { params });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedLocationState.html":{"url":"interfaces/SelectedLocationState.html","title":"interface - SelectedLocationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectedLocationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/selected-location-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentWeather\n                                \n                                \n                                        details\n                                \n                                \n                                        forecast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentWeather\n                                    \n                                \n                                \n                                    \n                                        currentWeather:         Weather\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Weather\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         Location\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Location\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forecast\n                                    \n                                \n                                \n                                    \n                                        forecast:         Forecast\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Forecast\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Weather } from './weather';\nimport { Location } from './location';\nimport { Forecast } from './forecast';\nimport { Favorite } from './favorite';\n\nexport interface SelectedLocationState {\n  details: Location;\n  currentWeather: Weather;\n  forecast: Forecast;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectedWeatherComponent.html":{"url":"components/SelectedWeatherComponent.html","title":"component - SelectedWeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectedWeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/selected-weather/selected-weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-selected-weather\n            \n\n            \n                styleUrls\n                ./selected-weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selected-weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favorites\n                            \n                            \n                                isFavorite\n                            \n                            \n                                isMetricTemp\n                            \n                            \n                                selectedLocationState\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavorite\n                            \n                            \n                                favorite\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(favoritesService: FavoritesService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/selected-weather/selected-weather.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoritesService\n                                                  \n                                                        \n                                                                        FavoritesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFavorite\n                        \n                        \n                    \n                \n            \n            \n                \naddFavorite()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selected-weather/selected-weather.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            favorite\n                        \n                        \n                    \n                \n            \n            \n                \nfavorite()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selected-weather/selected-weather.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selected-weather/selected-weather.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selected-weather/selected-weather.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFavorite\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFavorite()\n                \n            \n\n\n            \n                \n                    Defined in src/app/selected-weather/selected-weather.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Favorite[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selected-weather/selected-weather.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selected-weather/selected-weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMetricTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selected-weather/selected-weather.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLocationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectedLocationState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selected-weather/selected-weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/selected-weather/selected-weather.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { SelectedLocationState } from '../shared/interfaces/selected-location-state';\nimport { addFavorite, removeFavorite } from '../shared/ngrx/actions/locations.actions';\nimport { FavoritesService } from '../shared/services/favorites.service';\nimport { Favorite } from '../shared/interfaces/favorite';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-selected-weather',\n  templateUrl: './selected-weather.component.html',\n  styleUrls: ['./selected-weather.component.scss']\n})\nexport class SelectedWeatherComponent implements OnInit, OnDestroy {\n\n  constructor(private favoritesService: FavoritesService, private store: Store) { }\n  selectedLocationState: SelectedLocationState;\n  isMetricTemp = true;\n  isFavorite = false;\n  favorites: Favorite[];\n  subscriptions: Subscription[] = [];\n  ngOnInit(): void {\n    this.isFavorite = false;\n    this.subscriptions.push(this.store.pipe(select('LocationState', 'selectedLocation')).subscribe(\n      (selectedLocationState: SelectedLocationState) => {\n        this.selectedLocationState = selectedLocationState;\n        if (this.selectedLocationState.details && this.selectedLocationState.currentWeather && this.favorites) {\n          const favorite = this.favorite();\n          this.isFavorite = this.favoritesService.isfavoriteExist(favorite, this.favorites);\n        }\n      }\n    ));\n    this.subscriptions.push(this.store.pipe(select('LocationState', 'favorites')).subscribe(\n      (favorites: Favorite[]) => {\n        this.favorites = favorites;\n        const favorite = this.favorite();\n        this.isFavorite = this.favoritesService.isfavoriteExist(favorite, this.favorites);\n      }\n    ));\n  }\n  addFavorite() {\n    const favorite = this.favorite();\n    if (this.selectedLocationState.details.Key && !this.favoritesService.isfavoriteExist(favorite, this.favorites)) {\n      this.store.dispatch(addFavorite({ favorite }));\n    } else {\n      alert('Could not add to favorites !!');\n    }\n  }\n  removeFavorite() {\n    const favorite = this.favorite();\n    if (this.selectedLocationState.details.Key && this.favoritesService.isfavoriteExist(favorite, this.favorites)) {\n      this.store.dispatch(removeFavorite({ favoriteKey: this.selectedLocationState.details.Key }));\n    } else {\n      alert('Could not remove from favorites !!');\n    }\n  }\n  favorite() {\n    const favorite: Favorite = {\n      location: this.selectedLocationState.details,\n      weather: this.selectedLocationState.currentWeather\n    };\n    return favorite;\n  }\n  ngOnDestroy(){\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n\n    \n\n    \n        \n  {{ selectedLocationState.currentWeather.Temperature.Metric.Value }} &#8451;\n\n\n  {{ selectedLocationState.currentWeather.Temperature.Imperial.Value }} &#8457;\n\n\n\n  \n    \n      \n      \n      \n        \n          \n          \n        \n        \n      \n    \n    \n      \n      \n    \n  \n  \n    {{selectedLocationState.details.LocalizedName}}\n    {{selectedLocationState.currentWeather.WeatherText}}\n    \n    \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./selected-weather.component.scss\n                \n                #selected-weather-container{\n  height: 100%;\n  display: grid;\n  grid-template-rows: 100px 0.5fr 0.5fr;\n}\n#selected-weather-header{\n  justify-content: space-between;\n}\n#icon{\n  display: grid;\n  width: 170px;\n  grid-template-columns:  0.5fr 0.5fr;\n  padding: 5px;\n  div{\n    text-align: center;\n  }\n}\n\n@media only screen and (max-width: 345px) {\n  #selected-weather-container{\n    height: 100%;\n    display: grid;\n    grid-template-rows: 100px 0.25fr 0.75fr !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ selectedLocationState.currentWeather.Temperature.Metric.Value }} ℃  {{ selectedLocationState.currentWeather.Temperature.Imperial.Value }} ℉                                                                                                          {{selectedLocationState.details.LocalizedName}}    {{selectedLocationState.currentWeather.WeatherText}}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'FavoriteCardComponent', 'selector': 'app-favorite-card'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectedWeatherComponent', 'selector': 'app-selected-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectedWeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Weather.html":{"url":"interfaces/Weather.html","title":"interface - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/weather.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        EpochTime\n                                \n                                \n                                        HasPrecipitation\n                                \n                                \n                                        IsDayTime\n                                \n                                \n                                        Link\n                                \n                                \n                                        LocalObservationDateTime\n                                \n                                \n                                        MobileLink\n                                \n                                \n                                        PrecipitationType\n                                \n                                \n                                        Temperature\n                                \n                                \n                                        WeatherIcon\n                                \n                                \n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PrecipitationType\n                                    \n                                \n                                \n                                    \n                                        PrecipitationType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Weather {\n  EpochTime: number;\n  HasPrecipitation: boolean;\n  IsDayTime: boolean;\n  Link: string;\n  LocalObservationDateTime: string;\n  MobileLink: string;\n  PrecipitationType: string;\n  Temperature: {\n    Imperial: {\n      Unit: string;\n      UnitType: number;\n      Value: number;\n    }\n    Metric: {\n      Unit: string;\n      UnitType: number;\n      Value: number;\n    }\n  };\n  WeatherIcon: number;\n  WeatherText: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forecastRes\n                            \n                            \n                                key\n                            \n                            \n                                mockWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentWeather\n                            \n                            \n                                getForecast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/weather.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentWeather\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentWeather(location)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/weather.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecast\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecast(location)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/weather.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forecastRes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : forecastRes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/weather.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'p7mcGBKmOHQ6Gad0QBaXD5iHGWpt4wwd'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/weather.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/weather.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { Weather } from '../interfaces/weather';\nimport { forecastRes } from '../../../assets/mocks/forecast-mock';\nimport { Forecast } from '../interfaces/forecast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  key = 'p7mcGBKmOHQ6Gad0QBaXD5iHGWpt4wwd';\n  forecastRes = forecastRes;\n  mockWeather: Weather[];\n  constructor(private http: HttpClient) { }\n  getCurrentWeather(location) {\n    const params = new HttpParams().set('apikey', this.key);\n    return this.http.get(`https://dataservice.accuweather.com/currentconditions/v1/${location}`, { params });\n  }\n  getForecast(location) {\n    let params = new HttpParams().set('apikey', this.key);\n    params = params.set('metric', 'true');\n    return this.http.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location}`, { params });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                docs/assets/default-location.ts\n            \n            variable\n            telAviv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                docs/assets/mocks/forecast-mock.ts\n            \n            variable\n            forecastRes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                docs/assets/mocks/suggestions-mock.ts\n            \n            variable\n            suggstionsMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/favorite-card/favorite-card.component.ts\n            \n            component\n            FavoriteCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-header/main-header.component.ts\n            \n            component\n            MainHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/selected-weather/selected-weather.component.ts\n            \n            component\n            SelectedWeatherComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/daily-forecast.ts\n            \n            interface\n            DailyForecast\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/favorite.ts\n            \n            interface\n            Favorite\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/forecast.ts\n            \n            interface\n            Forecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/idx-data.ts\n            \n            interface\n            IdxData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/input.ts\n            \n            interface\n            Input\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/location.ts\n            \n            interface\n            Location\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/selected-location-state.ts\n            \n            interface\n            SelectedLocationState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/weather.ts\n            \n            interface\n            Weather\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            addFavorite\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            removeFavorite\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            searchLoad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            searchLoadSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            selectedWeatherLoad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            selectedWeatherLoadForecastSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/actions/locations.actions.ts\n            \n            variable\n            selectedWeatherLoadSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/effects/locations.effects.ts\n            \n            injectable\n            LocationsEffects\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/reducers/locations.reducer.ts\n            \n            interface\n            LocationState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/reducers/locations.reducer.ts\n            \n            function\n            locationsReducerFunc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/reducers/locations.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/ngrx/reducers/locations.reducer.ts\n            \n            variable\n            locationsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/favorites.service.ts\n            \n            injectable\n            FavoritesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/assets/default-location.ts\n            \n            variable\n            telAviv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/mocks/forecast-mock.ts\n            \n            variable\n            forecastRes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/mocks/suggestions-mock.ts\n            \n            variable\n            suggstionsMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.12\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @ngrx/effects : ^9.2.0\n        \n            @ngrx/store : ^9.2.0\n        \n            @ngrx/store-devtools : ^9.2.0\n        \n            animate.css : ^4.1.0\n        \n            primeicons : ^4.0.0\n        \n            primeng : ^9.1.3\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            locationsReducerFunc   (src/.../locations.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/ngrx/reducers/locations.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            locationsReducerFunc\n                        \n                        \n                    \n                \n            \n            \n                \nlocationsReducerFunc(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHeroloWeatherFinder\nThis project was generated with Angular CLI version 9.1.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nFavoriteCardComponent\n\nFavoriteCardComponent\n\nAppModule -->\n\nFavoriteCardComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nForecastComponent\n\nForecastComponent\n\nAppModule -->\n\nForecastComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nMainHeaderComponent\n\nMainHeaderComponent\n\nAppModule -->\n\nMainHeaderComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSelectedWeatherComponent\n\nSelectedWeatherComponent\n\nAppModule -->\n\nSelectedWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addFavorite   (src/.../locations.actions.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forecastRes   (docs/.../forecast-mock.ts)\n                        \n                        \n                            forecastRes   (src/.../forecast-mock.ts)\n                        \n                        \n                            initialState   (src/.../locations.reducer.ts)\n                        \n                        \n                            locationsReducer   (src/.../locations.reducer.ts)\n                        \n                        \n                            removeFavorite   (src/.../locations.actions.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            searchLoad   (src/.../locations.actions.ts)\n                        \n                        \n                            searchLoadSuccess   (src/.../locations.actions.ts)\n                        \n                        \n                            selectedWeatherLoad   (src/.../locations.actions.ts)\n                        \n                        \n                            selectedWeatherLoadForecastSuccess   (src/.../locations.actions.ts)\n                        \n                        \n                            selectedWeatherLoadSuccess   (src/.../locations.actions.ts)\n                        \n                        \n                            suggstionsMock   (docs/.../suggestions-mock.ts)\n                        \n                        \n                            suggstionsMock   (src/.../suggestions-mock.ts)\n                        \n                        \n                            telAviv   (src/.../default-location.ts)\n                        \n                        \n                            telAviv   (docs/.../default-location.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/ngrx/actions/locations.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Favorite Add]  Add to Favorites',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Favorite Remove]  Remove from Favorites',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Search Load] Load Search Results',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchLoadSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Search API]  Update Search Results',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWeatherLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[SelectedWeather Load]  Load Current Weather',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWeatherLoadForecastSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[SelectedWeather API]  Update Forecast',\n  props())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWeatherLoadSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[SelectedWeather API]  Update Current Weather',\n  props())\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    docs/assets/mocks/forecast-mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            forecastRes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Headline: {\n    EffectiveDate: '2020-08-01T08:00:00+03:00',\n    EffectiveEpochDate: 1596258000,\n    Severity: 4,\n    Text: 'Pleasant this weekend',\n    Category: 'mild',\n    EndDate: null,\n    EndEpochDate: null,\n    MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/extended-weather-forecast/213225?unit=c&lang=en-us',\n    Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?unit=c&lang=en-us'\n  },\n  DailyForecasts: [\n    {\n      Date: '2020-07-30T07:00:00+03:00',\n      EpochDate: 1596081600,\n      Temperature: {\n        Minimum: {\n          Value: 20.8,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 33.3,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=1&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=1&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-07-31T07:00:00+03:00',\n      EpochDate: 1596168000,\n      Temperature: {\n        Minimum: {\n          Value: 20.6,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 31.1,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=2&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=2&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-01T07:00:00+03:00',\n      EpochDate: 1596254400,\n      Temperature: {\n        Minimum: {\n          Value: 19.2,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 30.4,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=3&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=3&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-02T07:00:00+03:00',\n      EpochDate: 1596340800,\n      Temperature: {\n        Minimum: {\n          Value: 21.4,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 30.5,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=4&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=4&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-03T07:00:00+03:00',\n      EpochDate: 1596427200,\n      Temperature: {\n        Minimum: {\n          Value: 19.5,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 29.6,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=5&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=5&unit=c&lang=en-us'\n    }\n  ]\n}\n                        \n                    \n\n\n            \n        \n\n    src/assets/mocks/forecast-mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            forecastRes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Headline: {\n    EffectiveDate: '2020-08-01T08:00:00+03:00',\n    EffectiveEpochDate: 1596258000,\n    Severity: 4,\n    Text: 'Pleasant this weekend',\n    Category: 'mild',\n    EndDate: null,\n    EndEpochDate: null,\n    MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/extended-weather-forecast/213225?unit=c&lang=en-us',\n    Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?unit=c&lang=en-us'\n  },\n  DailyForecasts: [\n    {\n      Date: '2020-07-30T07:00:00+03:00',\n      EpochDate: 1596081600,\n      Temperature: {\n        Minimum: {\n          Value: 20.8,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 33.3,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=1&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=1&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-07-31T07:00:00+03:00',\n      EpochDate: 1596168000,\n      Temperature: {\n        Minimum: {\n          Value: 20.6,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 31.1,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=2&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=2&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-01T07:00:00+03:00',\n      EpochDate: 1596254400,\n      Temperature: {\n        Minimum: {\n          Value: 19.2,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 30.4,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=3&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=3&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-02T07:00:00+03:00',\n      EpochDate: 1596340800,\n      Temperature: {\n        Minimum: {\n          Value: 21.4,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 30.5,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 33,\n        IconPhrase: 'Clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=4&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=4&unit=c&lang=en-us'\n    },\n    {\n      Date: '2020-08-03T07:00:00+03:00',\n      EpochDate: 1596427200,\n      Temperature: {\n        Minimum: {\n          Value: 19.5,\n          Unit: 'C',\n          UnitType: 17\n        },\n        Maximum: {\n          Value: 29.6,\n          Unit: 'C',\n          UnitType: 17\n        }\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false\n      },\n      Sources: [\n        'AccuWeather'\n      ],\n      MobileLink: 'http://m.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=5&unit=c&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/jerusalem/213225/daily-weather-forecast/213225?day=5&unit=c&lang=en-us'\n    }\n  ]\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/ngrx/reducers/locations.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  selected: null,\n  suggestions: [],\n  selectedLocation: {\n    details: null,\n    currentWeather: null,\n    forecast: null,\n  },\n  favorites: []\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationsReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(LocationActions.searchLoad, (state, payload) => ({ ...state, selected: payload.input })),\n  on(LocationActions.searchLoadSuccess, (state, payload) => ({ ...state, suggestions: payload.suggestions })),\n  on(LocationActions.selectedWeatherLoad, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, details: payload.selectedLocation }\n    });\n  }),\n  on(LocationActions.selectedWeatherLoadSuccess, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, currentWeather: payload.currentWeather[0] }\n    });\n  }),\n  on(LocationActions.selectedWeatherLoadForecastSuccess, (state, payload) => {\n    return ({\n      ...state, selectedLocation:\n        { ...state.selectedLocation, forecast: payload.forecast }\n    });\n  }),\n  on(LocationActions.addFavorite, (state, payload) => {\n    const favoritesTmp = state.favorites.map(elem => elem);\n    favoritesTmp.push(payload.favorite);\n    return (\n      {\n        ...state, favorites: favoritesTmp\n      }\n    );\n  }),\n  on(LocationActions.removeFavorite, (state, payload) => {\n    const favoritesTmp = state.favorites.filter(elem => elem.location.Key !== payload.favoriteKey);\n    return (\n      {\n        ...state, favorites: favoritesTmp\n      }\n    );\n  })\n)\n                        \n                    \n\n\n            \n        \n\n    docs/assets/mocks/suggestions-mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            suggstionsMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    Version: 1,\n    Key: '328328',\n    Type: 'City',\n    Rank: 10,\n    LocalizedName: 'London',\n    Country: {\n      ID: 'GB',\n      LocalizedName: 'United Kingdom'\n    },\n    AdministrativeArea: {\n      ID: 'LND',\n      LocalizedName: 'London'\n    }\n  },\n  {\n    Version: 1,\n    Key: '44945',\n    Type: 'City',\n    Rank: 35,\n    LocalizedName: 'Londrina',\n    Country: {\n      ID: 'BR',\n      LocalizedName: 'Brazil'\n    },\n    AdministrativeArea: {\n      ID: 'PR',\n      LocalizedName: 'Paraná'\n    }\n  },\n  {\n    Version: 1,\n    Key: '55489',\n    Type: 'City',\n    Rank: 35,\n    LocalizedName: 'London',\n    Country: {\n      ID: 'CA',\n      LocalizedName: 'Canada'\n    },\n    AdministrativeArea: {\n      ID: 'ON',\n      LocalizedName: 'Ontario'\n    }\n  },\n  {\n    Version: 1,\n    Key: '329139',\n    Type: 'City',\n    Rank: 41,\n    LocalizedName: 'Londonderry asdasdasdasdasdasdasdasdasdasdasdasdasdasdasd',\n    Country: {\n      ID: 'GB',\n      LocalizedName: 'United Kingdom'\n    },\n    AdministrativeArea: {\n      ID: 'DRS',\n      LocalizedName: 'Derry City and Strabane'\n    }\n  },\n  {\n    Version: 1,\n    Key: '31679',\n    Type: 'City',\n    Rank: 63,\n    LocalizedName: 'Londerzeel',\n    Country: {\n      ID: 'BE',\n      LocalizedName: 'Belgium'\n    },\n    AdministrativeArea: {\n      ID: 'VBR',\n      LocalizedName: 'Flemish Brabant'\n    }\n  },\n  {\n    Version: 1,\n    Key: '2174076',\n    Type: 'City',\n    Rank: 65,\n    LocalizedName: 'Londonderry afsascasfcasdf',\n    Country: {\n      ID: 'US',\n      LocalizedName: 'United States'\n    },\n    AdministrativeArea: {\n      ID: 'NH',\n      LocalizedName: 'New Hampshire  asdasdasdasdasdasdasd'\n    }\n  },\n  {\n    Version: 1,\n    Key: '2551',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londengo  adasdasdadasdas',\n    Country: {\n      ID: 'AO',\n      LocalizedName: 'Angola'\n    },\n    AdministrativeArea: {\n      ID: 'BGU',\n      LocalizedName: 'Benguela   adfqawqwqqw'\n    }\n  },\n  {\n    Version: 1,\n    Key: '203973',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londa',\n    Country: {\n      ID: 'IN',\n      LocalizedName: 'India'\n    },\n    AdministrativeArea: {\n      ID: 'KA',\n      LocalizedName: 'Karnataka'\n    }\n  },\n  {\n    Version: 1,\n    Key: '229017',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londokomanana',\n    Country: {\n      ID: 'MG',\n      LocalizedName: 'Madagascar'\n    },\n    AdministrativeArea: {\n      ID: 'M',\n      LocalizedName: 'Mahajanga'\n    }\n  },\n  {\n    Version: 1,\n    Key: '258033',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londol',\n    Country: {\n      ID: 'PG',\n      LocalizedName: 'Papua New Guinea'\n    },\n    AdministrativeArea: {\n      ID: 'EPW',\n      LocalizedName: 'Enga'\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/assets/mocks/suggestions-mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            suggstionsMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    Version: 1,\n    Key: '328328',\n    Type: 'City',\n    Rank: 10,\n    LocalizedName: 'London',\n    Country: {\n      ID: 'GB',\n      LocalizedName: 'United Kingdom'\n    },\n    AdministrativeArea: {\n      ID: 'LND',\n      LocalizedName: 'London'\n    }\n  },\n  {\n    Version: 1,\n    Key: '44945',\n    Type: 'City',\n    Rank: 35,\n    LocalizedName: 'Londrina',\n    Country: {\n      ID: 'BR',\n      LocalizedName: 'Brazil'\n    },\n    AdministrativeArea: {\n      ID: 'PR',\n      LocalizedName: 'Paraná'\n    }\n  },\n  {\n    Version: 1,\n    Key: '55489',\n    Type: 'City',\n    Rank: 35,\n    LocalizedName: 'London',\n    Country: {\n      ID: 'CA',\n      LocalizedName: 'Canada'\n    },\n    AdministrativeArea: {\n      ID: 'ON',\n      LocalizedName: 'Ontario'\n    }\n  },\n  {\n    Version: 1,\n    Key: '329139',\n    Type: 'City',\n    Rank: 41,\n    LocalizedName: 'Londonderry asdasdasdasdasdasdasdasdasdasdasdasdasdasdasd',\n    Country: {\n      ID: 'GB',\n      LocalizedName: 'United Kingdom'\n    },\n    AdministrativeArea: {\n      ID: 'DRS',\n      LocalizedName: 'Derry City and Strabane'\n    }\n  },\n  {\n    Version: 1,\n    Key: '31679',\n    Type: 'City',\n    Rank: 63,\n    LocalizedName: 'Londerzeel',\n    Country: {\n      ID: 'BE',\n      LocalizedName: 'Belgium'\n    },\n    AdministrativeArea: {\n      ID: 'VBR',\n      LocalizedName: 'Flemish Brabant'\n    }\n  },\n  {\n    Version: 1,\n    Key: '2174076',\n    Type: 'City',\n    Rank: 65,\n    LocalizedName: 'Londonderry afsascasfcasdf',\n    Country: {\n      ID: 'US',\n      LocalizedName: 'United States'\n    },\n    AdministrativeArea: {\n      ID: 'NH',\n      LocalizedName: 'New Hampshire  asdasdasdasdasdasdasd'\n    }\n  },\n  {\n    Version: 1,\n    Key: '2551',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londengo  adasdasdadasdas',\n    Country: {\n      ID: 'AO',\n      LocalizedName: 'Angola'\n    },\n    AdministrativeArea: {\n      ID: 'BGU',\n      LocalizedName: 'Benguela   adfqawqwqqw'\n    }\n  },\n  {\n    Version: 1,\n    Key: '203973',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londa',\n    Country: {\n      ID: 'IN',\n      LocalizedName: 'India'\n    },\n    AdministrativeArea: {\n      ID: 'KA',\n      LocalizedName: 'Karnataka'\n    }\n  },\n  {\n    Version: 1,\n    Key: '229017',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londokomanana',\n    Country: {\n      ID: 'MG',\n      LocalizedName: 'Madagascar'\n    },\n    AdministrativeArea: {\n      ID: 'M',\n      LocalizedName: 'Mahajanga'\n    }\n  },\n  {\n    Version: 1,\n    Key: '258033',\n    Type: 'City',\n    Rank: 75,\n    LocalizedName: 'Londol',\n    Country: {\n      ID: 'PG',\n      LocalizedName: 'Papua New Guinea'\n    },\n    AdministrativeArea: {\n      ID: 'EPW',\n      LocalizedName: 'Enga'\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/assets/default-location.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            telAviv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  AdministrativeArea: {\n    ID: 'TA',\n    LocalizedName: 'Tel Aviv',\n  },\n  Country: {\n    ID:  'IL',\n    LocalizedName: 'Israel'\n  },\n  Key: '215854',\n  LocalizedName: 'Tel Aviv',\n  Rank: 31,\n  Type: 'City',\n  Version: 1\n}\n                        \n                    \n\n\n            \n        \n\n    docs/assets/default-location.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            telAviv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  AdministrativeArea: {\n    ID: 'TA',\n    LocalizedName: 'Tel Aviv',\n  },\n  Country: {\n    ID:  'IL',\n    LocalizedName: 'Israel'\n  },\n  Key: '215854',\n  LocalizedName: 'Tel Aviv',\n  Rank: 31,\n  Type: 'City',\n  Version: 1\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
